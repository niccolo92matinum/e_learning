{
  "version": 3,
  "sources": ["../../soundmanager2/script/soundmanager2.js", "../../react-sound/lib/index.js"],
  "sourcesContent": ["/** @license\r\n *\r\n * SoundManager 2: JavaScript Sound for the Web\r\n * ----------------------------------------------\r\n * http://schillmania.com/projects/soundmanager2/\r\n *\r\n * Copyright (c) 2007, Scott Schiller. All rights reserved.\r\n * Code provided under the BSD License:\r\n * http://schillmania.com/projects/soundmanager2/license.txt\r\n *\r\n * V2.97a.20170601\r\n */\r\n\r\n/**\r\n * About this file\r\n * -------------------------------------------------------------------------------------\r\n * This is the fully-commented source version of the SoundManager 2 API,\r\n * recommended for use during development and testing.\r\n *\r\n * See soundmanager2-nodebug-jsmin.js for an optimized build (~11KB with gzip.)\r\n * http://schillmania.com/projects/soundmanager2/doc/getstarted/#basic-inclusion\r\n * Alternately, serve this file with gzip for 75% compression savings (~30KB over HTTP.)\r\n *\r\n * You may notice <d> and </d> comments in this source; these are delimiters for\r\n * debug blocks which are removed in the -nodebug builds, further optimizing code size.\r\n *\r\n * Also, as you may note: Whoa, reliable cross-platform/device audio support is hard! ;)\r\n */\r\n\r\n(function SM2(window, _undefined) {\r\n\r\n/* global Audio, document, window, navigator, define, module, SM2_DEFER, opera, setTimeout, setInterval, clearTimeout, sm2Debugger */\r\n\r\n'use strict';\r\n\r\nif (!window || !window.document) {\r\n\r\n  // Don't cross the [environment] streams. SM2 expects to be running in a browser, not under node.js etc.\r\n  // Additionally, if a browser somehow manages to fail this test, as Egon said: \"It would be bad.\"\r\n\r\n  throw new Error('SoundManager requires a browser with window and document objects.');\r\n\r\n}\r\n\r\nvar soundManager = null;\r\n\r\n/**\r\n * The SoundManager constructor.\r\n *\r\n * @constructor\r\n * @param {string} smURL Optional: Path to SWF files\r\n * @param {string} smID Optional: The ID to use for the SWF container element\r\n * @this {SoundManager}\r\n * @return {SoundManager} The new SoundManager instance\r\n */\r\n\r\nfunction SoundManager(smURL, smID) {\r\n\r\n  /**\r\n   * soundManager configuration options list\r\n   * defines top-level configuration properties to be applied to the soundManager instance (eg. soundManager.flashVersion)\r\n   * to set these properties, use the setup() method - eg., soundManager.setup({url: '/swf/', flashVersion: 9})\r\n   */\r\n\r\n  this.setupOptions = {\r\n\r\n    url: (smURL || null),             // path (directory) where SoundManager 2 SWFs exist, eg., /path/to/swfs/\r\n    flashVersion: 8,                  // flash build to use (8 or 9.) Some API features require 9.\r\n    debugMode: true,                  // enable debugging output (console.log() with HTML fallback)\r\n    debugFlash: false,                // enable debugging output inside SWF, troubleshoot Flash/browser issues\r\n    useConsole: true,                 // use console.log() if available (otherwise, writes to #soundmanager-debug element)\r\n    consoleOnly: true,                // if console is being used, do not create/write to #soundmanager-debug\r\n    waitForWindowLoad: false,         // force SM2 to wait for window.onload() before trying to call soundManager.onload()\r\n    bgColor: '#ffffff',               // SWF background color. N/A when wmode = 'transparent'\r\n    useHighPerformance: false,        // position:fixed flash movie can help increase js/flash speed, minimize lag\r\n    flashPollingInterval: null,       // msec affecting whileplaying/loading callback frequency. If null, default of 50 msec is used.\r\n    html5PollingInterval: null,       // msec affecting whileplaying() for HTML5 audio, excluding mobile devices. If null, native HTML5 update events are used.\r\n    flashLoadTimeout: 1000,           // msec to wait for flash movie to load before failing (0 = infinity)\r\n    wmode: null,                      // flash rendering mode - null, 'transparent', or 'opaque' (last two allow z-index to work)\r\n    allowScriptAccess: 'always',      // for scripting the SWF (object/embed property), 'always' or 'sameDomain'\r\n    useFlashBlock: false,             // *requires flashblock.css, see demos* - allow recovery from flash blockers. Wait indefinitely and apply timeout CSS to SWF, if applicable.\r\n    useHTML5Audio: true,              // use HTML5 Audio() where API is supported (most Safari, Chrome versions), Firefox (MP3/MP4 support varies.) Ideally, transparent vs. Flash API where possible.\r\n    forceUseGlobalHTML5Audio: false,  // if true, a single Audio() object is used for all sounds - and only one can play at a time.\r\n    ignoreMobileRestrictions: false,  // if true, SM2 will not apply global HTML5 audio rules to mobile UAs. iOS > 7 and WebViews may allow multiple Audio() instances.\r\n    html5Test: /^(probably|maybe)$/i, // HTML5 Audio() format support test. Use /^probably$/i; if you want to be more conservative.\r\n    preferFlash: false,               // overrides useHTML5audio, will use Flash for MP3/MP4/AAC if present. Potential option if HTML5 playback with these formats is quirky.\r\n    noSWFCache: false,                // if true, appends ?ts={date} to break aggressive SWF caching.\r\n    idPrefix: 'sound'                 // if an id is not provided to createSound(), this prefix is used for generated IDs - 'sound0', 'sound1' etc.\r\n\r\n  };\r\n\r\n  this.defaultOptions = {\r\n\r\n    /**\r\n     * the default configuration for sound objects made with createSound() and related methods\r\n     * eg., volume, auto-load behaviour and so forth\r\n     */\r\n\r\n    autoLoad: false,        // enable automatic loading (otherwise .load() will be called on demand with .play(), the latter being nicer on bandwidth - if you want to .load yourself, you also can)\r\n    autoPlay: false,        // enable playing of file as soon as possible (much faster if \"stream\" is true)\r\n    from: null,             // position to start playback within a sound (msec), default = beginning\r\n    loops: 1,               // how many times to repeat the sound (position will wrap around to 0, setPosition() will break out of loop when >0)\r\n    onid3: null,            // callback function for \"ID3 data is added/available\"\r\n    onerror: null,          // callback function for \"load failed\" (or, playback/network/decode error under HTML5.)\r\n    onload: null,           // callback function for \"load finished\"\r\n    whileloading: null,     // callback function for \"download progress update\" (X of Y bytes received)\r\n    onplay: null,           // callback for \"play\" start\r\n    onpause: null,          // callback for \"pause\"\r\n    onresume: null,         // callback for \"resume\" (pause toggle)\r\n    whileplaying: null,     // callback during play (position update)\r\n    onposition: null,       // object containing times and function callbacks for positions of interest\r\n    onstop: null,           // callback for \"user stop\"\r\n    onfinish: null,         // callback function for \"sound finished playing\"\r\n    multiShot: true,        // let sounds \"restart\" or layer on top of each other when played multiple times, rather than one-shot/one at a time\r\n    multiShotEvents: false, // fire multiple sound events (currently onfinish() only) when multiShot is enabled\r\n    position: null,         // offset (milliseconds) to seek to within loaded sound data.\r\n    pan: 0,                 // \"pan\" settings, left-to-right, -100 to 100\r\n    playbackRate: 1,        // rate at which to play the sound (HTML5-only)\r\n    stream: true,           // allows playing before entire file has loaded (recommended)\r\n    to: null,               // position to end playback within a sound (msec), default = end\r\n    type: null,             // MIME-like hint for file pattern / canPlay() tests, eg. audio/mp3\r\n    usePolicyFile: false,   // enable crossdomain.xml request for audio on remote domains (for ID3/waveform access)\r\n    volume: 100             // self-explanatory. 0-100, the latter being the max.\r\n\r\n  };\r\n\r\n  this.flash9Options = {\r\n\r\n    /**\r\n     * flash 9-only options,\r\n     * merged into defaultOptions if flash 9 is being used\r\n     */\r\n\r\n    onfailure: null,        // callback function for when playing fails (Flash 9, MovieStar + RTMP-only)\r\n    isMovieStar: null,      // \"MovieStar\" MPEG4 audio mode. Null (default) = auto detect MP4, AAC etc. based on URL. true = force on, ignore URL\r\n    usePeakData: false,     // enable left/right channel peak (level) data\r\n    useWaveformData: false, // enable sound spectrum (raw waveform data) - NOTE: May increase CPU load.\r\n    useEQData: false,       // enable sound EQ (frequency spectrum data) - NOTE: May increase CPU load.\r\n    onbufferchange: null,   // callback for \"isBuffering\" property change\r\n    ondataerror: null       // callback for waveform/eq data access error (flash playing audio in other tabs/domains)\r\n\r\n  };\r\n\r\n  this.movieStarOptions = {\r\n\r\n    /**\r\n     * flash 9.0r115+ MPEG4 audio options,\r\n     * merged into defaultOptions if flash 9+movieStar mode is enabled\r\n     */\r\n\r\n    bufferTime: 3,          // seconds of data to buffer before playback begins (null = flash default of 0.1 seconds - if AAC playback is gappy, try increasing.)\r\n    serverURL: null,        // rtmp: FMS or FMIS server to connect to, required when requesting media via RTMP or one of its variants\r\n    onconnect: null,        // rtmp: callback for connection to flash media server\r\n    duration: null          // rtmp: song duration (msec)\r\n\r\n  };\r\n\r\n  this.audioFormats = {\r\n\r\n    /**\r\n     * determines HTML5 support + flash requirements.\r\n     * if no support (via flash and/or HTML5) for a \"required\" format, SM2 will fail to start.\r\n     * flash fallback is used for MP3 or MP4 if HTML5 can't play it (or if preferFlash = true)\r\n     */\r\n\r\n    mp3: {\r\n      type: ['audio/mpeg; codecs=\"mp3\"', 'audio/mpeg', 'audio/mp3', 'audio/MPA', 'audio/mpa-robust'],\r\n      required: true\r\n    },\r\n\r\n    mp4: {\r\n      related: ['aac', 'm4a', 'm4b'], // additional formats under the MP4 container\r\n      type: ['audio/mp4; codecs=\"mp4a.40.2\"', 'audio/aac', 'audio/x-m4a', 'audio/MP4A-LATM', 'audio/mpeg4-generic'],\r\n      required: false\r\n    },\r\n\r\n    ogg: {\r\n      type: ['audio/ogg; codecs=vorbis'],\r\n      required: false\r\n    },\r\n\r\n    opus: {\r\n      type: ['audio/ogg; codecs=opus', 'audio/opus'],\r\n      required: false\r\n    },\r\n\r\n    wav: {\r\n      type: ['audio/wav; codecs=\"1\"', 'audio/wav', 'audio/wave', 'audio/x-wav'],\r\n      required: false\r\n    },\r\n\r\n    flac: {\r\n      type: ['audio/flac'],\r\n      required: false\r\n    }\r\n\r\n  };\r\n\r\n  // HTML attributes (id + class names) for the SWF container\r\n\r\n  this.movieID = 'sm2-container';\r\n  this.id = (smID || 'sm2movie');\r\n\r\n  this.debugID = 'soundmanager-debug';\r\n  this.debugURLParam = /([#?&])debug=1/i;\r\n\r\n  // dynamic attributes\r\n\r\n  this.versionNumber = 'V2.97a.20170601';\r\n  this.version = null;\r\n  this.movieURL = null;\r\n  this.altURL = null;\r\n  this.swfLoaded = false;\r\n  this.enabled = false;\r\n  this.oMC = null;\r\n  this.sounds = {};\r\n  this.soundIDs = [];\r\n  this.muted = false;\r\n  this.didFlashBlock = false;\r\n  this.filePattern = null;\r\n\r\n  this.filePatterns = {\r\n    flash8: /\\.mp3(\\?.*)?$/i,\r\n    flash9: /\\.mp3(\\?.*)?$/i\r\n  };\r\n\r\n  // support indicators, set at init\r\n\r\n  this.features = {\r\n    buffering: false,\r\n    peakData: false,\r\n    waveformData: false,\r\n    eqData: false,\r\n    movieStar: false\r\n  };\r\n\r\n  // flash sandbox info, used primarily in troubleshooting\r\n\r\n  this.sandbox = {\r\n    // <d>\r\n    type: null,\r\n    types: {\r\n      remote: 'remote (domain-based) rules',\r\n      localWithFile: 'local with file access (no internet access)',\r\n      localWithNetwork: 'local with network (internet access only, no local access)',\r\n      localTrusted: 'local, trusted (local+internet access)'\r\n    },\r\n    description: null,\r\n    noRemote: null,\r\n    noLocal: null\r\n    // </d>\r\n  };\r\n\r\n  /**\r\n   * format support (html5/flash)\r\n   * stores canPlayType() results based on audioFormats.\r\n   * eg. { mp3: boolean, mp4: boolean }\r\n   * treat as read-only.\r\n   */\r\n\r\n  this.html5 = {\r\n    usingFlash: null // set if/when flash fallback is needed\r\n  };\r\n\r\n  // file type support hash\r\n  this.flash = {};\r\n\r\n  // determined at init time\r\n  this.html5Only = false;\r\n\r\n  // used for special cases (eg. iPad/iPhone/palm OS?)\r\n  this.ignoreFlash = false;\r\n\r\n  /**\r\n   * a few private internals (OK, a lot. :D)\r\n   */\r\n\r\n  var SMSound,\r\n  sm2 = this, globalHTML5Audio = null, flash = null, sm = 'soundManager', smc = sm + ': ', h5 = 'HTML5::', id, ua = navigator.userAgent, wl = window.location.href.toString(), doc = document, doNothing, setProperties, init, fV, on_queue = [], debugOpen = true, debugTS, didAppend = false, appendSuccess = false, didInit = false, disabled = false, windowLoaded = false, _wDS, wdCount = 0, initComplete, mixin, assign, extraOptions, addOnEvent, processOnEvents, initUserOnload, delayWaitForEI, waitForEI, rebootIntoHTML5, setVersionInfo, handleFocus, strings, initMovie, domContentLoaded, winOnLoad, didDCLoaded, getDocument, createMovie, catchError, setPolling, initDebug, debugLevels = ['log', 'info', 'warn', 'error'], defaultFlashVersion = 8, disableObject, failSafely, normalizeMovieURL, oRemoved = null, oRemovedHTML = null, str, flashBlockHandler, getSWFCSS, swfCSS, toggleDebug, loopFix, policyFix, complain, idCheck, waitingForEI = false, initPending = false, startTimer, stopTimer, timerExecute, h5TimerCount = 0, h5IntervalTimer = null, parseURL, messages = [],\r\n  canIgnoreFlash, needsFlash = null, featureCheck, html5OK, html5CanPlay, html5ErrorCodes, html5Ext, html5Unload, domContentLoadedIE, testHTML5, event, slice = Array.prototype.slice, useGlobalHTML5Audio = false, lastGlobalHTML5URL, hasFlash, detectFlash, badSafariFix, html5_events, showSupport, flushMessages, wrapCallback, idCounter = 0, didSetup, msecScale = 1000,\r\n  is_iDevice = ua.match(/(ipad|iphone|ipod)/i), isAndroid = ua.match(/android/i), isIE = ua.match(/msie|trident/i),\r\n  isWebkit = ua.match(/webkit/i),\r\n  isSafari = (ua.match(/safari/i) && !ua.match(/chrome/i)),\r\n  isOpera = (ua.match(/opera/i)),\r\n  mobileHTML5 = (ua.match(/(mobile|pre\\/|xoom)/i) || is_iDevice || isAndroid),\r\n  isBadSafari = (!wl.match(/usehtml5audio/i) && !wl.match(/sm2-ignorebadua/i) && isSafari && !ua.match(/silk/i) && ua.match(/OS\\sX\\s10_6_([3-7])/i)), // Safari 4 and 5 (excluding Kindle Fire, \"Silk\") occasionally fail to load/play HTML5 audio on Snow Leopard 10.6.3 through 10.6.7 due to bug(s) in QuickTime X and/or other underlying frameworks. :/ Confirmed bug. https://bugs.webkit.org/show_bug.cgi?id=32159\r\n  hasConsole = (window.console !== _undefined && console.log !== _undefined),\r\n  isFocused = (doc.hasFocus !== _undefined ? doc.hasFocus() : null),\r\n  tryInitOnFocus = (isSafari && (doc.hasFocus === _undefined || !doc.hasFocus())),\r\n  okToDisable = !tryInitOnFocus,\r\n  flashMIME = /(mp3|mp4|mpa|m4a|m4b)/i,\r\n  emptyURL = 'about:blank', // safe URL to unload, or load nothing from (flash 8 + most HTML5 UAs)\r\n  emptyWAV = 'data:audio/wave;base64,/UklGRiYAAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YQIAAAD//w==', // tiny WAV for HTML5 unloading\r\n  overHTTP = (doc.location ? doc.location.protocol.match(/http/i) : null),\r\n  http = (!overHTTP ? '//' : ''),\r\n  // mp3, mp4, aac etc.\r\n  netStreamMimeTypes = /^\\s*audio\\/(?:x-)?(?:mpeg4|aac|flv|mov|mp4|m4v|m4a|m4b|mp4v|3gp|3g2)\\s*(?:$|;)/i,\r\n  // Flash v9.0r115+ \"moviestar\" formats\r\n  netStreamTypes = ['mpeg4', 'aac', 'flv', 'mov', 'mp4', 'm4v', 'f4v', 'm4a', 'm4b', 'mp4v', '3gp', '3g2'],\r\n  netStreamPattern = new RegExp('\\\\.(' + netStreamTypes.join('|') + ')(\\\\?.*)?$', 'i');\r\n\r\n  this.mimePattern = /^\\s*audio\\/(?:x-)?(?:mp(?:eg|3))\\s*(?:$|;)/i; // default mp3 set\r\n\r\n  // use altURL if not \"online\"\r\n  this.useAltURL = !overHTTP;\r\n\r\n  swfCSS = {\r\n    swfBox: 'sm2-object-box',\r\n    swfDefault: 'movieContainer',\r\n    swfError: 'swf_error', // SWF loaded, but SM2 couldn't start (other error)\r\n    swfTimedout: 'swf_timedout',\r\n    swfLoaded: 'swf_loaded',\r\n    swfUnblocked: 'swf_unblocked', // or loaded OK\r\n    sm2Debug: 'sm2_debug',\r\n    highPerf: 'high_performance',\r\n    flashDebug: 'flash_debug'\r\n  };\r\n\r\n  /**\r\n   * HTML5 error codes, per W3C\r\n   * Error code 1, MEDIA_ERR_ABORTED: Client aborted download at user's request.\r\n   * Error code 2, MEDIA_ERR_NETWORK: A network error of some description caused the user agent to stop fetching the media resource, after the resource was established to be usable.\r\n   * Error code 3, MEDIA_ERR_DECODE: An error of some description occurred while decoding the media resource, after the resource was established to be usable.\r\n   * Error code 4, MEDIA_ERR_SRC_NOT_SUPPORTED: Media (audio file) not supported (\"not usable.\")\r\n   * Reference: https://html.spec.whatwg.org/multipage/embedded-content.html#error-codes\r\n   */\r\n  html5ErrorCodes = [\r\n    null,\r\n    'MEDIA_ERR_ABORTED',\r\n    'MEDIA_ERR_NETWORK',\r\n    'MEDIA_ERR_DECODE',\r\n    'MEDIA_ERR_SRC_NOT_SUPPORTED'\r\n  ];\r\n\r\n  /**\r\n   * basic HTML5 Audio() support test\r\n   * try...catch because of IE 9 \"not implemented\" nonsense\r\n   * https://github.com/Modernizr/Modernizr/issues/224\r\n   */\r\n\r\n  this.hasHTML5 = (function() {\r\n    try {\r\n      // new Audio(null) for stupid Opera 9.64 case, which throws not_enough_arguments exception otherwise.\r\n      return (Audio !== _undefined && (isOpera && opera !== _undefined && opera.version() < 10 ? new Audio(null) : new Audio()).canPlayType !== _undefined);\r\n    } catch(e) {\r\n      return false;\r\n    }\r\n  }());\r\n\r\n  /**\r\n   * Public SoundManager API\r\n   * -----------------------\r\n   */\r\n\r\n  /**\r\n   * Configures top-level soundManager properties.\r\n   *\r\n   * @param {object} options Option parameters, eg. { flashVersion: 9, url: '/path/to/swfs/' }\r\n   * onready and ontimeout are also accepted parameters. call soundManager.setup() to see the full list.\r\n   */\r\n\r\n  this.setup = function(options) {\r\n\r\n    var noURL = (!sm2.url);\r\n\r\n    // warn if flash options have already been applied\r\n\r\n    if (options !== _undefined && didInit && needsFlash && sm2.ok() && (options.flashVersion !== _undefined || options.url !== _undefined || options.html5Test !== _undefined)) {\r\n      complain(str('setupLate'));\r\n    }\r\n\r\n    // TODO: defer: true?\r\n\r\n    assign(options);\r\n\r\n    if (!useGlobalHTML5Audio) {\r\n\r\n      if (mobileHTML5) {\r\n\r\n        // force the singleton HTML5 pattern on mobile, by default.\r\n        if (!sm2.setupOptions.ignoreMobileRestrictions || sm2.setupOptions.forceUseGlobalHTML5Audio) {\r\n          messages.push(strings.globalHTML5);\r\n          useGlobalHTML5Audio = true;\r\n        }\r\n\r\n      } else if (sm2.setupOptions.forceUseGlobalHTML5Audio) {\r\n\r\n        // only apply singleton HTML5 on desktop if forced.\r\n        messages.push(strings.globalHTML5);\r\n        useGlobalHTML5Audio = true;\r\n\r\n      }\r\n\r\n    }\r\n\r\n    if (!didSetup && mobileHTML5) {\r\n\r\n      if (sm2.setupOptions.ignoreMobileRestrictions) {\r\n\r\n        messages.push(strings.ignoreMobile);\r\n\r\n      } else {\r\n\r\n        // prefer HTML5 for mobile + tablet-like devices, probably more reliable vs. flash at this point.\r\n\r\n        // <d>\r\n        if (!sm2.setupOptions.useHTML5Audio || sm2.setupOptions.preferFlash) {\r\n          // notify that defaults are being changed.\r\n          sm2._wD(strings.mobileUA);\r\n        }\r\n        // </d>\r\n\r\n        sm2.setupOptions.useHTML5Audio = true;\r\n        sm2.setupOptions.preferFlash = false;\r\n\r\n        if (is_iDevice) {\r\n\r\n          // no flash here.\r\n          sm2.ignoreFlash = true;\r\n\r\n        } else if ((isAndroid && !ua.match(/android\\s2\\.3/i)) || !isAndroid) {\r\n\r\n          /**\r\n           * Android devices tend to work better with a single audio instance, specifically for chained playback of sounds in sequence.\r\n           * Common use case: exiting sound onfinish() -> createSound() -> play()\r\n           * Presuming similar restrictions for other mobile, non-Android, non-iOS devices.\r\n           */\r\n\r\n          // <d>\r\n          sm2._wD(strings.globalHTML5);\r\n          // </d>\r\n\r\n          useGlobalHTML5Audio = true;\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // special case 1: \"Late setup\". SM2 loaded normally, but user didn't assign flash URL eg., setup({url:...}) before SM2 init. Treat as delayed init.\r\n\r\n    if (options) {\r\n\r\n      if (noURL && didDCLoaded && options.url !== _undefined) {\r\n        sm2.beginDelayedInit();\r\n      }\r\n\r\n      // special case 2: If lazy-loading SM2 (DOMContentLoaded has already happened) and user calls setup() with url: parameter, try to init ASAP.\r\n\r\n      if (!didDCLoaded && options.url !== _undefined && doc.readyState === 'complete') {\r\n        setTimeout(domContentLoaded, 1);\r\n      }\r\n\r\n    }\r\n\r\n    didSetup = true;\r\n\r\n    return sm2;\r\n\r\n  };\r\n\r\n  this.ok = function() {\r\n\r\n    return (needsFlash ? (didInit && !disabled) : (sm2.useHTML5Audio && sm2.hasHTML5));\r\n\r\n  };\r\n\r\n  this.supported = this.ok; // legacy\r\n\r\n  this.getMovie = function(movie_id) {\r\n\r\n    // safety net: some old browsers differ on SWF references, possibly related to ExternalInterface / flash version\r\n    return id(movie_id) || doc[movie_id] || window[movie_id];\r\n\r\n  };\r\n\r\n  /**\r\n   * Creates a SMSound sound object instance. Can also be overloaded, e.g., createSound('mySound', '/some.mp3');\r\n   *\r\n   * @param {object} oOptions Sound options (at minimum, url parameter is required.)\r\n   * @return {object} SMSound The new SMSound object.\r\n   */\r\n\r\n  this.createSound = function(oOptions, _url) {\r\n\r\n    var cs, cs_string, options, oSound = null;\r\n\r\n    // <d>\r\n    cs = sm + '.createSound(): ';\r\n    cs_string = cs + str(!didInit ? 'notReady' : 'notOK');\r\n    // </d>\r\n\r\n    if (!didInit || !sm2.ok()) {\r\n      complain(cs_string);\r\n      return false;\r\n    }\r\n\r\n    if (_url !== _undefined) {\r\n      // function overloading in JS! :) ... assume simple createSound(id, url) use case.\r\n      oOptions = {\r\n        id: oOptions,\r\n        url: _url\r\n      };\r\n    }\r\n\r\n    // inherit from defaultOptions\r\n    options = mixin(oOptions);\r\n\r\n    options.url = parseURL(options.url);\r\n\r\n    // generate an id, if needed.\r\n    if (options.id === _undefined) {\r\n      options.id = sm2.setupOptions.idPrefix + (idCounter++);\r\n    }\r\n\r\n    // <d>\r\n    if (options.id.toString().charAt(0).match(/^[0-9]$/)) {\r\n      sm2._wD(cs + str('badID', options.id), 2);\r\n    }\r\n\r\n    sm2._wD(cs + options.id + (options.url ? ' (' + options.url + ')' : ''), 1);\r\n    // </d>\r\n\r\n    if (idCheck(options.id, true)) {\r\n      sm2._wD(cs + options.id + ' exists', 1);\r\n      return sm2.sounds[options.id];\r\n    }\r\n\r\n    function make() {\r\n\r\n      options = loopFix(options);\r\n      sm2.sounds[options.id] = new SMSound(options);\r\n      sm2.soundIDs.push(options.id);\r\n      return sm2.sounds[options.id];\r\n\r\n    }\r\n\r\n    if (html5OK(options)) {\r\n\r\n      oSound = make();\r\n      // <d>\r\n      if (!sm2.html5Only) {\r\n        sm2._wD(options.id + ': Using HTML5');\r\n      }\r\n      // </d>\r\n      oSound._setup_html5(options);\r\n\r\n    } else {\r\n\r\n      if (sm2.html5Only) {\r\n        sm2._wD(options.id + ': No HTML5 support for this sound, and no Flash. Exiting.');\r\n        return make();\r\n      }\r\n\r\n      // TODO: Move HTML5/flash checks into generic URL parsing/handling function.\r\n\r\n      if (sm2.html5.usingFlash && options.url && options.url.match(/data:/i)) {\r\n        // data: URIs not supported by Flash, either.\r\n        sm2._wD(options.id + ': data: URIs not supported via Flash. Exiting.');\r\n        return make();\r\n      }\r\n\r\n      if (fV > 8) {\r\n        if (options.isMovieStar === null) {\r\n          // attempt to detect MPEG-4 formats\r\n          options.isMovieStar = !!(options.serverURL || (options.type ? options.type.match(netStreamMimeTypes) : false) || (options.url && options.url.match(netStreamPattern)));\r\n        }\r\n        // <d>\r\n        if (options.isMovieStar) {\r\n          sm2._wD(cs + 'using MovieStar handling');\r\n          if (options.loops > 1) {\r\n            _wDS('noNSLoop');\r\n          }\r\n        }\r\n        // </d>\r\n      }\r\n\r\n      options = policyFix(options, cs);\r\n      oSound = make();\r\n\r\n      if (fV === 8) {\r\n        flash._createSound(options.id, options.loops || 1, options.usePolicyFile);\r\n      } else {\r\n        flash._createSound(options.id, options.url, options.usePeakData, options.useWaveformData, options.useEQData, options.isMovieStar, (options.isMovieStar ? options.bufferTime : false), options.loops || 1, options.serverURL, options.duration || null, options.autoPlay, true, options.autoLoad, options.usePolicyFile);\r\n        if (!options.serverURL) {\r\n          // We are connected immediately\r\n          oSound.connected = true;\r\n          if (options.onconnect) {\r\n            options.onconnect.apply(oSound);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!options.serverURL && (options.autoLoad || options.autoPlay)) {\r\n        // call load for non-rtmp streams\r\n        oSound.load(options);\r\n      }\r\n\r\n    }\r\n\r\n    // rtmp will play in onconnect\r\n    if (!options.serverURL && options.autoPlay) {\r\n      oSound.play();\r\n    }\r\n\r\n    return oSound;\r\n\r\n  };\r\n\r\n  /**\r\n   * Destroys a SMSound sound object instance.\r\n   *\r\n   * @param {string} sID The ID of the sound to destroy\r\n   */\r\n\r\n  this.destroySound = function(sID, _bFromSound) {\r\n\r\n    // explicitly destroy a sound before normal page unload, etc.\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    var oS = sm2.sounds[sID], i;\r\n\r\n    oS.stop();\r\n\r\n    // Disable all callbacks after stop(), when the sound is being destroyed\r\n    oS._iO = {};\r\n\r\n    oS.unload();\r\n\r\n    for (i = 0; i < sm2.soundIDs.length; i++) {\r\n      if (sm2.soundIDs[i] === sID) {\r\n        sm2.soundIDs.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!_bFromSound) {\r\n      // ignore if being called from SMSound instance\r\n      oS.destruct(true);\r\n    }\r\n\r\n    oS = null;\r\n    delete sm2.sounds[sID];\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the load() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {object} oOptions Optional: Sound options\r\n   */\r\n\r\n  this.load = function(sID, oOptions) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].load(oOptions);\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the unload() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   */\r\n\r\n  this.unload = function(sID) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].unload();\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the onPosition() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {number} nPosition The position to watch for\r\n   * @param {function} oMethod The relevant callback to fire\r\n   * @param {object} oScope Optional: The scope to apply the callback to\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.onPosition = function(sID, nPosition, oMethod, oScope) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].onposition(nPosition, oMethod, oScope);\r\n\r\n  };\r\n\r\n  // legacy/backwards-compability: lower-case method name\r\n  this.onposition = this.onPosition;\r\n\r\n  /**\r\n   * Calls the clearOnPosition() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {number} nPosition The position to watch for\r\n   * @param {function} oMethod Optional: The relevant callback to fire\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.clearOnPosition = function(sID, nPosition, oMethod) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].clearOnPosition(nPosition, oMethod);\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the play() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {object} oOptions Optional: Sound options\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.play = function(sID, oOptions) {\r\n\r\n    var result = null,\r\n        // legacy function-overloading use case: play('mySound', '/path/to/some.mp3');\r\n        overloaded = (oOptions && !(oOptions instanceof Object));\r\n\r\n    if (!didInit || !sm2.ok()) {\r\n      complain(sm + '.play(): ' + str(!didInit ? 'notReady' : 'notOK'));\r\n      return false;\r\n    }\r\n\r\n    if (!idCheck(sID, overloaded)) {\r\n\r\n      // no sound found for the given ID. Bail.\r\n      if (!overloaded) return false;\r\n\r\n      if (overloaded) {\r\n        oOptions = {\r\n          url: oOptions\r\n        };\r\n      }\r\n\r\n      if (oOptions && oOptions.url) {\r\n        // overloading use case, create+play: .play('someID', {url:'/path/to.mp3'});\r\n        sm2._wD(sm + '.play(): Attempting to create \"' + sID + '\"', 1);\r\n        oOptions.id = sID;\r\n        result = sm2.createSound(oOptions).play();\r\n      }\r\n\r\n    } else if (overloaded) {\r\n\r\n      // existing sound object case\r\n      oOptions = {\r\n        url: oOptions\r\n      };\r\n\r\n    }\r\n\r\n    if (result === null) {\r\n      // default case\r\n      result = sm2.sounds[sID].play(oOptions);\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  // just for convenience\r\n  this.start = this.play;\r\n\r\n  /**\r\n   * Calls the setPlaybackRate() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.setPlaybackRate = function(sID, rate, allowOverride) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].setPlaybackRate(rate, allowOverride);\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the setPosition() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {number} nMsecOffset Position (milliseconds)\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.setPosition = function(sID, nMsecOffset) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].setPosition(nMsecOffset);\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the stop() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.stop = function(sID) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    sm2._wD(sm + '.stop(' + sID + ')', 1);\r\n\r\n    return sm2.sounds[sID].stop();\r\n\r\n  };\r\n\r\n  /**\r\n   * Stops all currently-playing sounds.\r\n   */\r\n\r\n  this.stopAll = function() {\r\n\r\n    var oSound;\r\n    sm2._wD(sm + '.stopAll()', 1);\r\n\r\n    for (oSound in sm2.sounds) {\r\n      if (sm2.sounds.hasOwnProperty(oSound)) {\r\n        // apply only to sound objects\r\n        sm2.sounds[oSound].stop();\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the pause() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.pause = function(sID) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].pause();\r\n\r\n  };\r\n\r\n  /**\r\n   * Pauses all currently-playing sounds.\r\n   */\r\n\r\n  this.pauseAll = function() {\r\n\r\n    var i;\r\n    for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n      sm2.sounds[sm2.soundIDs[i]].pause();\r\n    }\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the resume() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.resume = function(sID) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].resume();\r\n\r\n  };\r\n\r\n  /**\r\n   * Resumes all currently-paused sounds.\r\n   */\r\n\r\n  this.resumeAll = function() {\r\n\r\n    var i;\r\n    for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n      sm2.sounds[sm2.soundIDs[i]].resume();\r\n    }\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the togglePause() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.togglePause = function(sID) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].togglePause();\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the setPan() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {number} nPan The pan value (-100 to 100)\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.setPan = function(sID, nPan) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].setPan(nPan);\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the setVolume() method of a SMSound object by ID\r\n   * Overloaded case: pass only volume argument eg., setVolume(50) to apply to all sounds.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {number} nVol The volume value (0 to 100)\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.setVolume = function(sID, nVol) {\r\n\r\n    // setVolume(50) function overloading case - apply to all sounds\r\n\r\n    var i, j;\r\n\r\n    if (sID !== _undefined && !isNaN(sID) && nVol === _undefined) {\r\n      for (i = 0, j = sm2.soundIDs.length; i < j; i++) {\r\n        sm2.sounds[sm2.soundIDs[i]].setVolume(sID);\r\n      }\r\n      return false;\r\n    }\r\n\r\n    // setVolume('mySound', 50) case\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].setVolume(nVol);\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the mute() method of either a single SMSound object by ID, or all sound objects.\r\n   *\r\n   * @param {string} sID Optional: The ID of the sound (if omitted, all sounds will be used.)\r\n   */\r\n\r\n  this.mute = function(sID) {\r\n\r\n    var i = 0;\r\n\r\n    if (sID instanceof String) {\r\n      sID = null;\r\n    }\r\n\r\n    if (!sID) {\r\n\r\n      sm2._wD(sm + '.mute(): Muting all sounds');\r\n      for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n        sm2.sounds[sm2.soundIDs[i]].mute();\r\n      }\r\n      sm2.muted = true;\r\n\r\n    } else {\r\n\r\n      if (!idCheck(sID)) return false;\r\n\r\n      sm2._wD(sm + '.mute(): Muting \"' + sID + '\"');\r\n      return sm2.sounds[sID].mute();\r\n\r\n    }\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  /**\r\n   * Mutes all sounds.\r\n   */\r\n\r\n  this.muteAll = function() {\r\n\r\n    sm2.mute();\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the unmute() method of either a single SMSound object by ID, or all sound objects.\r\n   *\r\n   * @param {string} sID Optional: The ID of the sound (if omitted, all sounds will be used.)\r\n   */\r\n\r\n  this.unmute = function(sID) {\r\n\r\n    var i;\r\n\r\n    if (sID instanceof String) {\r\n      sID = null;\r\n    }\r\n\r\n    if (!sID) {\r\n\r\n      sm2._wD(sm + '.unmute(): Unmuting all sounds');\r\n      for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n        sm2.sounds[sm2.soundIDs[i]].unmute();\r\n      }\r\n      sm2.muted = false;\r\n\r\n    } else {\r\n\r\n      if (!idCheck(sID)) return false;\r\n\r\n      sm2._wD(sm + '.unmute(): Unmuting \"' + sID + '\"');\r\n\r\n      return sm2.sounds[sID].unmute();\r\n\r\n    }\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  /**\r\n   * Unmutes all sounds.\r\n   */\r\n\r\n  this.unmuteAll = function() {\r\n\r\n    sm2.unmute();\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the toggleMute() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.toggleMute = function(sID) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].toggleMute();\r\n\r\n  };\r\n\r\n  /**\r\n   * Retrieves the memory used by the flash plugin.\r\n   *\r\n   * @return {number} The amount of memory in use\r\n   */\r\n\r\n  this.getMemoryUse = function() {\r\n\r\n    // flash-only\r\n    var ram = 0;\r\n\r\n    if (flash && fV !== 8) {\r\n      ram = parseInt(flash._getMemoryUse(), 10);\r\n    }\r\n\r\n    return ram;\r\n\r\n  };\r\n\r\n  /**\r\n   * Undocumented: NOPs soundManager and all SMSound objects.\r\n   */\r\n\r\n  this.disable = function(bNoDisable) {\r\n\r\n    // destroy all functions\r\n    var i;\r\n\r\n    if (bNoDisable === _undefined) {\r\n      bNoDisable = false;\r\n    }\r\n\r\n    // already disabled?\r\n    if (disabled) return false;\r\n\r\n    disabled = true;\r\n\r\n    _wDS('shutdown', 1);\r\n\r\n    for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n      disableObject(sm2.sounds[sm2.soundIDs[i]]);\r\n    }\r\n\r\n    disableObject(sm2);\r\n\r\n    // fire \"complete\", despite fail\r\n    initComplete(bNoDisable);\r\n\r\n    event.remove(window, 'load', initUserOnload);\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  /**\r\n   * Determines playability of a MIME type, eg. 'audio/mp3'.\r\n   */\r\n\r\n  this.canPlayMIME = function(sMIME) {\r\n\r\n    var result;\r\n\r\n    if (sm2.hasHTML5) {\r\n      result = html5CanPlay({\r\n        type: sMIME\r\n      });\r\n    }\r\n\r\n    if (!result && needsFlash) {\r\n      // if flash 9, test netStream (movieStar) types as well.\r\n      result = (sMIME && sm2.ok() ? !!((fV > 8 ? sMIME.match(netStreamMimeTypes) : null) || sMIME.match(sm2.mimePattern)) : null); // TODO: make less \"weird\" (per JSLint)\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  /**\r\n   * Determines playability of a URL based on audio support.\r\n   *\r\n   * @param {string} sURL The URL to test\r\n   * @return {boolean} URL playability\r\n   */\r\n\r\n  this.canPlayURL = function(sURL) {\r\n\r\n    var result;\r\n\r\n    if (sm2.hasHTML5) {\r\n      result = html5CanPlay({\r\n        url: sURL\r\n      });\r\n    }\r\n\r\n    if (!result && needsFlash) {\r\n      result = (sURL && sm2.ok() ? !!(sURL.match(sm2.filePattern)) : null);\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  /**\r\n   * Determines playability of an HTML DOM &lt;a&gt; object (or similar object literal) based on audio support.\r\n   *\r\n   * @param {object} oLink an HTML DOM &lt;a&gt; object or object literal including href and/or type attributes\r\n   * @return {boolean} URL playability\r\n   */\r\n\r\n  this.canPlayLink = function(oLink) {\r\n\r\n    if (oLink.type !== _undefined && oLink.type && sm2.canPlayMIME(oLink.type)) return true;\r\n\r\n    return sm2.canPlayURL(oLink.href);\r\n\r\n  };\r\n\r\n  /**\r\n   * Retrieves a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.getSoundById = function(sID, _suppressDebug) {\r\n\r\n    if (!sID) return null;\r\n\r\n    var result = sm2.sounds[sID];\r\n\r\n    // <d>\r\n    if (!result && !_suppressDebug) {\r\n      sm2._wD(sm + '.getSoundById(): Sound \"' + sID + '\" not found.', 2);\r\n    }\r\n    // </d>\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  /**\r\n   * Queues a callback for execution when SoundManager has successfully initialized.\r\n   *\r\n   * @param {function} oMethod The callback method to fire\r\n   * @param {object} oScope Optional: The scope to apply to the callback\r\n   */\r\n\r\n  this.onready = function(oMethod, oScope) {\r\n\r\n    var sType = 'onready',\r\n        result = false;\r\n\r\n    if (typeof oMethod === 'function') {\r\n\r\n      // <d>\r\n      if (didInit) {\r\n        sm2._wD(str('queue', sType));\r\n      }\r\n      // </d>\r\n\r\n      if (!oScope) {\r\n        oScope = window;\r\n      }\r\n\r\n      addOnEvent(sType, oMethod, oScope);\r\n      processOnEvents();\r\n\r\n      result = true;\r\n\r\n    } else {\r\n\r\n      throw str('needFunction', sType);\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  /**\r\n   * Queues a callback for execution when SoundManager has failed to initialize.\r\n   *\r\n   * @param {function} oMethod The callback method to fire\r\n   * @param {object} oScope Optional: The scope to apply to the callback\r\n   */\r\n\r\n  this.ontimeout = function(oMethod, oScope) {\r\n\r\n    var sType = 'ontimeout',\r\n        result = false;\r\n\r\n    if (typeof oMethod === 'function') {\r\n\r\n      // <d>\r\n      if (didInit) {\r\n        sm2._wD(str('queue', sType));\r\n      }\r\n      // </d>\r\n\r\n      if (!oScope) {\r\n        oScope = window;\r\n      }\r\n\r\n      addOnEvent(sType, oMethod, oScope);\r\n      processOnEvents({ type: sType });\r\n\r\n      result = true;\r\n\r\n    } else {\r\n\r\n      throw str('needFunction', sType);\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  /**\r\n   * Writes console.log()-style debug output to a console or in-browser element.\r\n   * Applies when debugMode = true\r\n   *\r\n   * @param {string} sText The console message\r\n   * @param {object} nType Optional log level (number), or object. Number case: Log type/style where 0 = 'info', 1 = 'warn', 2 = 'error'. Object case: Object to be dumped.\r\n   */\r\n\r\n  this._writeDebug = function(sText, sTypeOrObject) {\r\n\r\n    // pseudo-private console.log()-style output\r\n    // <d>\r\n\r\n    var sDID = 'soundmanager-debug', o, oItem;\r\n\r\n    if (!sm2.setupOptions.debugMode) return false;\r\n\r\n    if (hasConsole && sm2.useConsole) {\r\n      if (sTypeOrObject && typeof sTypeOrObject === 'object') {\r\n        // object passed; dump to console.\r\n        console.log(sText, sTypeOrObject);\r\n      } else if (debugLevels[sTypeOrObject] !== _undefined) {\r\n        console[debugLevels[sTypeOrObject]](sText);\r\n      } else {\r\n        console.log(sText);\r\n      }\r\n      if (sm2.consoleOnly) return true;\r\n    }\r\n\r\n    o = id(sDID);\r\n\r\n    if (!o) return false;\r\n\r\n    oItem = doc.createElement('div');\r\n\r\n    if (++wdCount % 2 === 0) {\r\n      oItem.className = 'sm2-alt';\r\n    }\r\n\r\n    if (sTypeOrObject === _undefined) {\r\n      sTypeOrObject = 0;\r\n    } else {\r\n      sTypeOrObject = parseInt(sTypeOrObject, 10);\r\n    }\r\n\r\n    oItem.appendChild(doc.createTextNode(sText));\r\n\r\n    if (sTypeOrObject) {\r\n      if (sTypeOrObject >= 2) {\r\n        oItem.style.fontWeight = 'bold';\r\n      }\r\n      if (sTypeOrObject === 3) {\r\n        oItem.style.color = '#ff3333';\r\n      }\r\n    }\r\n\r\n    // top-to-bottom\r\n    // o.appendChild(oItem);\r\n\r\n    // bottom-to-top\r\n    o.insertBefore(oItem, o.firstChild);\r\n\r\n    o = null;\r\n    // </d>\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  // <d>\r\n  // last-resort debugging option\r\n  if (wl.indexOf('sm2-debug=alert') !== -1) {\r\n    this._writeDebug = function(sText) {\r\n      window.alert(sText);\r\n    };\r\n  }\r\n  // </d>\r\n\r\n  // alias\r\n  this._wD = this._writeDebug;\r\n\r\n  /**\r\n   * Provides debug / state information on all SMSound objects.\r\n   */\r\n\r\n  this._debug = function() {\r\n\r\n    // <d>\r\n    var i, j;\r\n    _wDS('currentObj', 1);\r\n\r\n    for (i = 0, j = sm2.soundIDs.length; i < j; i++) {\r\n      sm2.sounds[sm2.soundIDs[i]]._debug();\r\n    }\r\n    // </d>\r\n\r\n  };\r\n\r\n  /**\r\n   * Restarts and re-initializes the SoundManager instance.\r\n   *\r\n   * @param {boolean} resetEvents Optional: When true, removes all registered onready and ontimeout event callbacks.\r\n   * @param {boolean} excludeInit Options: When true, does not call beginDelayedInit() (which would restart SM2).\r\n   * @return {object} soundManager The soundManager instance.\r\n   */\r\n\r\n  this.reboot = function(resetEvents, excludeInit) {\r\n\r\n    // reset some (or all) state, and re-init unless otherwise specified.\r\n\r\n    // <d>\r\n    if (sm2.soundIDs.length) {\r\n      sm2._wD('Destroying ' + sm2.soundIDs.length + ' SMSound object' + (sm2.soundIDs.length !== 1 ? 's' : '') + '...');\r\n    }\r\n    // </d>\r\n\r\n    var i, j, k;\r\n\r\n    for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n      sm2.sounds[sm2.soundIDs[i]].destruct();\r\n    }\r\n\r\n    // trash ze flash (remove from the DOM)\r\n\r\n    if (flash) {\r\n\r\n      try {\r\n\r\n        if (isIE) {\r\n          oRemovedHTML = flash.innerHTML;\r\n        }\r\n\r\n        oRemoved = flash.parentNode.removeChild(flash);\r\n\r\n      } catch(e) {\r\n\r\n        // Remove failed? May be due to flash blockers silently removing the SWF object/embed node from the DOM. Warn and continue.\r\n\r\n        _wDS('badRemove', 2);\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // actually, force recreate of movie.\r\n\r\n    oRemovedHTML = oRemoved = needsFlash = flash = null;\r\n\r\n    sm2.enabled = didDCLoaded = didInit = waitingForEI = initPending = didAppend = appendSuccess = disabled = useGlobalHTML5Audio = sm2.swfLoaded = false;\r\n\r\n    sm2.soundIDs = [];\r\n    sm2.sounds = {};\r\n\r\n    idCounter = 0;\r\n    didSetup = false;\r\n\r\n    if (!resetEvents) {\r\n      // reset callbacks for onready, ontimeout etc. so that they will fire again on re-init\r\n      for (i in on_queue) {\r\n        if (on_queue.hasOwnProperty(i)) {\r\n          for (j = 0, k = on_queue[i].length; j < k; j++) {\r\n            on_queue[i][j].fired = false;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      // remove all callbacks entirely\r\n      on_queue = [];\r\n    }\r\n\r\n    // <d>\r\n    if (!excludeInit) {\r\n      sm2._wD(sm + ': Rebooting...');\r\n    }\r\n    // </d>\r\n\r\n    // reset HTML5 and flash canPlay test results\r\n\r\n    sm2.html5 = {\r\n      usingFlash: null\r\n    };\r\n\r\n    sm2.flash = {};\r\n\r\n    // reset device-specific HTML/flash mode switches\r\n\r\n    sm2.html5Only = false;\r\n    sm2.ignoreFlash = false;\r\n\r\n    window.setTimeout(function() {\r\n\r\n      // by default, re-init\r\n\r\n      if (!excludeInit) {\r\n        sm2.beginDelayedInit();\r\n      }\r\n\r\n    }, 20);\r\n\r\n    return sm2;\r\n\r\n  };\r\n\r\n  this.reset = function() {\r\n\r\n    /**\r\n     * Shuts down and restores the SoundManager instance to its original loaded state, without an explicit reboot. All onready/ontimeout handlers are removed.\r\n     * After this call, SM2 may be re-initialized via soundManager.beginDelayedInit().\r\n     * @return {object} soundManager The soundManager instance.\r\n     */\r\n\r\n    _wDS('reset');\r\n\r\n    return sm2.reboot(true, true);\r\n\r\n  };\r\n\r\n  /**\r\n   * Undocumented: Determines the SM2 flash movie's load progress.\r\n   *\r\n   * @return {number or null} Percent loaded, or if invalid/unsupported, null.\r\n   */\r\n\r\n  this.getMoviePercent = function() {\r\n\r\n    /**\r\n     * Interesting syntax notes...\r\n     * Flash/ExternalInterface (ActiveX/NPAPI) bridge methods are not typeof \"function\" nor instanceof Function, but are still valid.\r\n     * Furthermore, using (flash && flash.PercentLoaded) causes IE to throw \"object doesn't support this property or method\".\r\n     * Thus, 'in' syntax must be used.\r\n     */\r\n\r\n    return (flash && 'PercentLoaded' in flash ? flash.PercentLoaded() : null);\r\n\r\n  };\r\n\r\n  /**\r\n   * Additional helper for manually invoking SM2's init process after DOM Ready / window.onload().\r\n   */\r\n\r\n  this.beginDelayedInit = function() {\r\n\r\n    windowLoaded = true;\r\n    domContentLoaded();\r\n\r\n    setTimeout(function() {\r\n\r\n      if (initPending) return false;\r\n\r\n      createMovie();\r\n      initMovie();\r\n      initPending = true;\r\n\r\n      return true;\r\n\r\n    }, 20);\r\n\r\n    delayWaitForEI();\r\n\r\n  };\r\n\r\n  /**\r\n   * Destroys the SoundManager instance and all SMSound instances.\r\n   */\r\n\r\n  this.destruct = function() {\r\n\r\n    sm2._wD(sm + '.destruct()');\r\n    sm2.disable(true);\r\n\r\n  };\r\n\r\n  /**\r\n   * SMSound() (sound object) constructor\r\n   * ------------------------------------\r\n   *\r\n   * @param {object} oOptions Sound options (id and url are required attributes)\r\n   * @return {SMSound} The new SMSound object\r\n   */\r\n\r\n  SMSound = function(oOptions) {\r\n\r\n    var s = this, resetProperties, add_html5_events, remove_html5_events, stop_html5_timer, start_html5_timer, attachOnPosition, onplay_called = false, onPositionItems = [], onPositionFired = 0, detachOnPosition, applyFromTo, lastURL = null, lastHTML5State, urlOmitted;\r\n\r\n    lastHTML5State = {\r\n      // tracks duration + position (time)\r\n      duration: null,\r\n      time: null\r\n    };\r\n\r\n    this.id = oOptions.id;\r\n\r\n    // legacy\r\n    this.sID = this.id;\r\n\r\n    this.url = oOptions.url;\r\n    this.options = mixin(oOptions);\r\n\r\n    // per-play-instance-specific options\r\n    this.instanceOptions = this.options;\r\n\r\n    // short alias\r\n    this._iO = this.instanceOptions;\r\n\r\n    // assign property defaults\r\n    this.pan = this.options.pan;\r\n    this.volume = this.options.volume;\r\n\r\n    // whether or not this object is using HTML5\r\n    this.isHTML5 = false;\r\n\r\n    // internal HTML5 Audio() object reference\r\n    this._a = null;\r\n\r\n    // for flash 8 special-case createSound() without url, followed by load/play with url case\r\n    urlOmitted = (!this.url);\r\n\r\n    /**\r\n     * SMSound() public methods\r\n     * ------------------------\r\n     */\r\n\r\n    this.id3 = {};\r\n\r\n    /**\r\n     * Writes SMSound object parameters to debug console\r\n     */\r\n\r\n    this._debug = function() {\r\n\r\n      // <d>\r\n      sm2._wD(s.id + ': Merged options:', s.options);\r\n      // </d>\r\n\r\n    };\r\n\r\n    /**\r\n     * Begins loading a sound per its *url*.\r\n     *\r\n     * @param {object} options Optional: Sound options\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.load = function(options) {\r\n\r\n      var oSound = null, instanceOptions;\r\n\r\n      if (options !== _undefined) {\r\n        s._iO = mixin(options, s.options);\r\n      } else {\r\n        options = s.options;\r\n        s._iO = options;\r\n        if (lastURL && lastURL !== s.url) {\r\n          _wDS('manURL');\r\n          s._iO.url = s.url;\r\n          s.url = null;\r\n        }\r\n      }\r\n\r\n      if (!s._iO.url) {\r\n        s._iO.url = s.url;\r\n      }\r\n\r\n      s._iO.url = parseURL(s._iO.url);\r\n\r\n      // ensure we're in sync\r\n      s.instanceOptions = s._iO;\r\n\r\n      // local shortcut\r\n      instanceOptions = s._iO;\r\n\r\n      sm2._wD(s.id + ': load (' + instanceOptions.url + ')');\r\n\r\n      if (!instanceOptions.url && !s.url) {\r\n        sm2._wD(s.id + ': load(): url is unassigned. Exiting.', 2);\r\n        return s;\r\n      }\r\n\r\n      // <d>\r\n      if (!s.isHTML5 && fV === 8 && !s.url && !instanceOptions.autoPlay) {\r\n        // flash 8 load() -> play() won't work before onload has fired.\r\n        sm2._wD(s.id + ': Flash 8 load() limitation: Wait for onload() before calling play().', 1);\r\n      }\r\n      // </d>\r\n\r\n      if (instanceOptions.url === s.url && s.readyState !== 0 && s.readyState !== 2) {\r\n        _wDS('onURL', 1);\r\n        // if loaded and an onload() exists, fire immediately.\r\n        if (s.readyState === 3 && instanceOptions.onload) {\r\n          // assume success based on truthy duration.\r\n          wrapCallback(s, function() {\r\n            instanceOptions.onload.apply(s, [(!!s.duration)]);\r\n          });\r\n        }\r\n        return s;\r\n      }\r\n\r\n      // reset a few state properties\r\n\r\n      s.loaded = false;\r\n      s.readyState = 1;\r\n      s.playState = 0;\r\n      s.id3 = {};\r\n\r\n      // TODO: If switching from HTML5 -> flash (or vice versa), stop currently-playing audio.\r\n\r\n      if (html5OK(instanceOptions)) {\r\n\r\n        oSound = s._setup_html5(instanceOptions);\r\n\r\n        if (!oSound._called_load) {\r\n\r\n          s._html5_canplay = false;\r\n\r\n          // TODO: review called_load / html5_canplay logic\r\n\r\n          // if url provided directly to load(), assign it here.\r\n\r\n          if (s.url !== instanceOptions.url) {\r\n\r\n            sm2._wD(_wDS('manURL') + ': ' + instanceOptions.url);\r\n\r\n            s._a.src = instanceOptions.url;\r\n\r\n            // TODO: review / re-apply all relevant options (volume, loop, onposition etc.)\r\n\r\n            // reset position for new URL\r\n            s.setPosition(0);\r\n\r\n          }\r\n\r\n          // given explicit load call, try to preload.\r\n\r\n          // early HTML5 implementation (non-standard)\r\n          s._a.autobuffer = 'auto';\r\n\r\n          // standard property, values: none / metadata / auto\r\n          // reference: http://msdn.microsoft.com/en-us/library/ie/ff974759%28v=vs.85%29.aspx\r\n          s._a.preload = 'auto';\r\n\r\n          s._a._called_load = true;\r\n\r\n        } else {\r\n\r\n          sm2._wD(s.id + ': Ignoring request to load again');\r\n\r\n        }\r\n\r\n      } else {\r\n\r\n        if (sm2.html5Only) {\r\n          sm2._wD(s.id + ': No flash support. Exiting.');\r\n          return s;\r\n        }\r\n\r\n        if (s._iO.url && s._iO.url.match(/data:/i)) {\r\n          // data: URIs not supported by Flash, either.\r\n          sm2._wD(s.id + ': data: URIs not supported via Flash. Exiting.');\r\n          return s;\r\n        }\r\n\r\n        try {\r\n          s.isHTML5 = false;\r\n          s._iO = policyFix(loopFix(instanceOptions));\r\n          // if we have \"position\", disable auto-play as we'll be seeking to that position at onload().\r\n          if (s._iO.autoPlay && (s._iO.position || s._iO.from)) {\r\n            sm2._wD(s.id + ': Disabling autoPlay because of non-zero offset case');\r\n            s._iO.autoPlay = false;\r\n          }\r\n          // re-assign local shortcut\r\n          instanceOptions = s._iO;\r\n          if (fV === 8) {\r\n            flash._load(s.id, instanceOptions.url, instanceOptions.stream, instanceOptions.autoPlay, instanceOptions.usePolicyFile);\r\n          } else {\r\n            flash._load(s.id, instanceOptions.url, !!(instanceOptions.stream), !!(instanceOptions.autoPlay), instanceOptions.loops || 1, !!(instanceOptions.autoLoad), instanceOptions.usePolicyFile);\r\n          }\r\n        } catch(e) {\r\n          _wDS('smError', 2);\r\n          debugTS('onload', false);\r\n          catchError({\r\n            type: 'SMSOUND_LOAD_JS_EXCEPTION',\r\n            fatal: true\r\n          });\r\n        }\r\n\r\n      }\r\n\r\n      // after all of this, ensure sound url is up to date.\r\n      s.url = instanceOptions.url;\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Unloads a sound, canceling any open HTTP requests.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.unload = function() {\r\n\r\n      // Flash 8/AS2 can't \"close\" a stream - fake it by loading an empty URL\r\n      // Flash 9/AS3: Close stream, preventing further load\r\n      // HTML5: Most UAs will use empty URL\r\n\r\n      if (s.readyState !== 0) {\r\n\r\n        sm2._wD(s.id + ': unload()');\r\n\r\n        if (!s.isHTML5) {\r\n\r\n          if (fV === 8) {\r\n            flash._unload(s.id, emptyURL);\r\n          } else {\r\n            flash._unload(s.id);\r\n          }\r\n\r\n        } else {\r\n\r\n          stop_html5_timer();\r\n\r\n          if (s._a) {\r\n\r\n            s._a.pause();\r\n\r\n            // update empty URL, too\r\n            lastURL = html5Unload(s._a);\r\n\r\n          }\r\n\r\n        }\r\n\r\n        // reset load/status flags\r\n        resetProperties();\r\n\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Unloads and destroys a sound.\r\n     */\r\n\r\n    this.destruct = function(_bFromSM) {\r\n\r\n      sm2._wD(s.id + ': Destruct');\r\n\r\n      if (!s.isHTML5) {\r\n\r\n        // kill sound within Flash\r\n        // Disable the onfailure handler\r\n        s._iO.onfailure = null;\r\n        flash._destroySound(s.id);\r\n\r\n      } else {\r\n\r\n        stop_html5_timer();\r\n\r\n        if (s._a) {\r\n          s._a.pause();\r\n          html5Unload(s._a);\r\n          if (!useGlobalHTML5Audio) {\r\n            remove_html5_events();\r\n          }\r\n          // break obvious circular reference\r\n          s._a._s = null;\r\n          s._a = null;\r\n        }\r\n\r\n      }\r\n\r\n      if (!_bFromSM) {\r\n        // ensure deletion from controller\r\n        sm2.destroySound(s.id, true);\r\n      }\r\n\r\n    };\r\n\r\n    /**\r\n     * Begins playing a sound.\r\n     *\r\n     * @param {object} options Optional: Sound options\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.play = function(options, _updatePlayState) {\r\n\r\n      var fN, allowMulti, a, onready,\r\n          audioClone, onended, oncanplay,\r\n          startOK = true;\r\n\r\n      // <d>\r\n      fN = s.id + ': play(): ';\r\n      // </d>\r\n\r\n      // default to true\r\n      _updatePlayState = (_updatePlayState === _undefined ? true : _updatePlayState);\r\n\r\n      if (!options) {\r\n        options = {};\r\n      }\r\n\r\n      // first, use local URL (if specified)\r\n      if (s.url) {\r\n        s._iO.url = s.url;\r\n      }\r\n\r\n      // mix in any options defined at createSound()\r\n      s._iO = mixin(s._iO, s.options);\r\n\r\n      // mix in any options specific to this method\r\n      s._iO = mixin(options, s._iO);\r\n\r\n      s._iO.url = parseURL(s._iO.url);\r\n\r\n      s.instanceOptions = s._iO;\r\n\r\n      // RTMP-only\r\n      if (!s.isHTML5 && s._iO.serverURL && !s.connected) {\r\n        if (!s.getAutoPlay()) {\r\n          sm2._wD(fN + ' Netstream not connected yet - setting autoPlay');\r\n          s.setAutoPlay(true);\r\n        }\r\n        // play will be called in onconnect()\r\n        return s;\r\n      }\r\n\r\n      if (html5OK(s._iO)) {\r\n        s._setup_html5(s._iO);\r\n        start_html5_timer();\r\n      }\r\n\r\n      if (s.playState === 1 && !s.paused) {\r\n\r\n        allowMulti = s._iO.multiShot;\r\n\r\n        if (!allowMulti) {\r\n\r\n          sm2._wD(fN + 'Already playing (one-shot)', 1);\r\n\r\n          if (s.isHTML5) {\r\n            // go back to original position.\r\n            s.setPosition(s._iO.position);\r\n          }\r\n\r\n          return s;\r\n\r\n        }\r\n\r\n        sm2._wD(fN + 'Already playing (multi-shot)', 1);\r\n\r\n      }\r\n\r\n      // edge case: play() with explicit URL parameter\r\n      if (options.url && options.url !== s.url) {\r\n\r\n        // special case for createSound() followed by load() / play() with url; avoid double-load case.\r\n        if (!s.readyState && !s.isHTML5 && fV === 8 && urlOmitted) {\r\n\r\n          urlOmitted = false;\r\n\r\n        } else {\r\n\r\n          // load using merged options\r\n          s.load(s._iO);\r\n\r\n        }\r\n\r\n      }\r\n\r\n      if (!s.loaded) {\r\n\r\n        if (s.readyState === 0) {\r\n\r\n          sm2._wD(fN + 'Attempting to load');\r\n\r\n          // try to get this sound playing ASAP\r\n          if (!s.isHTML5 && !sm2.html5Only) {\r\n\r\n            // flash: assign directly because setAutoPlay() increments the instanceCount\r\n            s._iO.autoPlay = true;\r\n            s.load(s._iO);\r\n\r\n          } else if (s.isHTML5) {\r\n\r\n            // iOS needs this when recycling sounds, loading a new URL on an existing object.\r\n            s.load(s._iO);\r\n\r\n          } else {\r\n\r\n            sm2._wD(fN + 'Unsupported type. Exiting.');\r\n\r\n            return s;\r\n\r\n          }\r\n\r\n          // HTML5 hack - re-set instanceOptions?\r\n          s.instanceOptions = s._iO;\r\n\r\n        } else if (s.readyState === 2) {\r\n\r\n          sm2._wD(fN + 'Could not load - exiting', 2);\r\n\r\n          return s;\r\n\r\n        } else {\r\n\r\n          sm2._wD(fN + 'Loading - attempting to play...');\r\n\r\n        }\r\n\r\n      } else {\r\n\r\n        // \"play()\"\r\n        sm2._wD(fN.substr(0, fN.lastIndexOf(':')));\r\n\r\n      }\r\n\r\n      if (!s.isHTML5 && fV === 9 && s.position > 0 && s.position === s.duration) {\r\n        // flash 9 needs a position reset if play() is called while at the end of a sound.\r\n        sm2._wD(fN + 'Sound at end, resetting to position: 0');\r\n        options.position = 0;\r\n      }\r\n\r\n      /**\r\n       * Streams will pause when their buffer is full if they are being loaded.\r\n       * In this case paused is true, but the song hasn't started playing yet.\r\n       * If we just call resume() the onplay() callback will never be called.\r\n       * So only call resume() if the position is > 0.\r\n       * Another reason is because options like volume won't have been applied yet.\r\n       * For normal sounds, just resume.\r\n       */\r\n\r\n      if (s.paused && s.position >= 0 && (!s._iO.serverURL || s.position > 0)) {\r\n\r\n        // https://gist.github.com/37b17df75cc4d7a90bf6\r\n        sm2._wD(fN + 'Resuming from paused state', 1);\r\n        s.resume();\r\n\r\n      } else {\r\n\r\n        s._iO = mixin(options, s._iO);\r\n\r\n        /**\r\n         * Preload in the event of play() with position under Flash,\r\n         * or from/to parameters and non-RTMP case\r\n         */\r\n        if (((!s.isHTML5 && s._iO.position !== null && s._iO.position > 0) || (s._iO.from !== null && s._iO.from > 0) || s._iO.to !== null) && s.instanceCount === 0 && s.playState === 0 && !s._iO.serverURL) {\r\n\r\n          onready = function() {\r\n            // sound \"canplay\" or onload()\r\n            // re-apply position/from/to to instance options, and start playback\r\n            s._iO = mixin(options, s._iO);\r\n            s.play(s._iO);\r\n          };\r\n\r\n          // HTML5 needs to at least have \"canplay\" fired before seeking.\r\n          if (s.isHTML5 && !s._html5_canplay) {\r\n\r\n            // this hasn't been loaded yet. load it first, and then do this again.\r\n            sm2._wD(fN + 'Beginning load for non-zero offset case');\r\n\r\n            s.load({\r\n              // note: custom HTML5-only event added for from/to implementation.\r\n              _oncanplay: onready\r\n            });\r\n\r\n          } else if (!s.isHTML5 && !s.loaded && (!s.readyState || s.readyState !== 2)) {\r\n\r\n            // to be safe, preload the whole thing in Flash.\r\n\r\n            sm2._wD(fN + 'Preloading for non-zero offset case');\r\n\r\n            s.load({\r\n              onload: onready\r\n            });\r\n\r\n          }\r\n\r\n          // otherwise, we're ready to go. re-apply local options, and continue\r\n\r\n          s._iO = applyFromTo();\r\n\r\n        }\r\n\r\n        // sm2._wD(fN + 'Starting to play');\r\n\r\n        // increment instance counter, where enabled + supported\r\n        if (!s.instanceCount || s._iO.multiShotEvents || (s.isHTML5 && s._iO.multiShot && !useGlobalHTML5Audio) || (!s.isHTML5 && fV > 8 && !s.getAutoPlay())) {\r\n          s.instanceCount++;\r\n        }\r\n\r\n        // if first play and onposition parameters exist, apply them now\r\n        if (s._iO.onposition && s.playState === 0) {\r\n          attachOnPosition(s);\r\n        }\r\n\r\n        s.playState = 1;\r\n        s.paused = false;\r\n\r\n        s.position = (s._iO.position !== _undefined && !isNaN(s._iO.position) ? s._iO.position : 0);\r\n\r\n        if (!s.isHTML5) {\r\n          s._iO = policyFix(loopFix(s._iO));\r\n        }\r\n\r\n        if (s._iO.onplay && _updatePlayState) {\r\n          s._iO.onplay.apply(s);\r\n          onplay_called = true;\r\n        }\r\n\r\n        s.setVolume(s._iO.volume, true);\r\n        s.setPan(s._iO.pan, true);\r\n\r\n        if (s._iO.playbackRate !== 1) {\r\n          s.setPlaybackRate(s._iO.playbackRate);\r\n        }\r\n\r\n        if (!s.isHTML5) {\r\n\r\n          startOK = flash._start(s.id, s._iO.loops || 1, (fV === 9 ? s.position : s.position / msecScale), s._iO.multiShot || false);\r\n\r\n          if (fV === 9 && !startOK) {\r\n            // edge case: no sound hardware, or 32-channel flash ceiling hit.\r\n            // applies only to Flash 9, non-NetStream/MovieStar sounds.\r\n            // http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/media/Sound.html#play%28%29\r\n            sm2._wD(fN + 'No sound hardware, or 32-sound ceiling hit', 2);\r\n            if (s._iO.onplayerror) {\r\n              s._iO.onplayerror.apply(s);\r\n            }\r\n\r\n          }\r\n\r\n        } else if (s.instanceCount < 2) {\r\n\r\n            // HTML5 single-instance case\r\n\r\n            start_html5_timer();\r\n\r\n            a = s._setup_html5();\r\n\r\n            s.setPosition(s._iO.position);\r\n\r\n            a.play();\r\n\r\n          } else {\r\n\r\n            // HTML5 multi-shot case\r\n\r\n            sm2._wD(s.id + ': Cloning Audio() for instance #' + s.instanceCount + '...');\r\n\r\n            audioClone = new Audio(s._iO.url);\r\n\r\n            onended = function() {\r\n              event.remove(audioClone, 'ended', onended);\r\n              s._onfinish(s);\r\n              // cleanup\r\n              html5Unload(audioClone);\r\n              audioClone = null;\r\n            };\r\n\r\n            oncanplay = function() {\r\n              event.remove(audioClone, 'canplay', oncanplay);\r\n              try {\r\n                audioClone.currentTime = s._iO.position / msecScale;\r\n              } catch(err) {\r\n                complain(s.id + ': multiShot play() failed to apply position of ' + (s._iO.position / msecScale));\r\n              }\r\n              audioClone.play();\r\n            };\r\n\r\n            event.add(audioClone, 'ended', onended);\r\n\r\n            // apply volume to clones, too\r\n            if (s._iO.volume !== _undefined) {\r\n              audioClone.volume = Math.max(0, Math.min(1, s._iO.volume / 100));\r\n            }\r\n\r\n            // playing multiple muted sounds? if you do this, you're weird ;) - but let's cover it.\r\n            if (s.muted) {\r\n              audioClone.muted = true;\r\n            }\r\n\r\n            if (s._iO.position) {\r\n              // HTML5 audio can't seek before onplay() event has fired.\r\n              // wait for canplay, then seek to position and start playback.\r\n              event.add(audioClone, 'canplay', oncanplay);\r\n            } else {\r\n              // begin playback at currentTime: 0\r\n              audioClone.play();\r\n            }\r\n\r\n          }\r\n\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    // just for convenience\r\n    this.start = this.play;\r\n\r\n    /**\r\n     * Stops playing a sound (and optionally, all sounds)\r\n     *\r\n     * @param {boolean} bAll Optional: Whether to stop all sounds\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.stop = function(bAll) {\r\n\r\n      var instanceOptions = s._iO,\r\n          originalPosition;\r\n\r\n      if (s.playState === 1) {\r\n\r\n        sm2._wD(s.id + ': stop()');\r\n\r\n        s._onbufferchange(0);\r\n        s._resetOnPosition(0);\r\n        s.paused = false;\r\n\r\n        if (!s.isHTML5) {\r\n          s.playState = 0;\r\n        }\r\n\r\n        // remove onPosition listeners, if any\r\n        detachOnPosition();\r\n\r\n        // and \"to\" position, if set\r\n        if (instanceOptions.to) {\r\n          s.clearOnPosition(instanceOptions.to);\r\n        }\r\n\r\n        if (!s.isHTML5) {\r\n\r\n          flash._stop(s.id, bAll);\r\n\r\n          // hack for netStream: just unload\r\n          if (instanceOptions.serverURL) {\r\n            s.unload();\r\n          }\r\n\r\n        } else if (s._a) {\r\n\r\n            originalPosition = s.position;\r\n\r\n            // act like Flash, though\r\n            s.setPosition(0);\r\n\r\n            // hack: reflect old position for onstop() (also like Flash)\r\n            s.position = originalPosition;\r\n\r\n            // html5 has no stop()\r\n            // NOTE: pausing means iOS requires interaction to resume.\r\n            s._a.pause();\r\n\r\n            s.playState = 0;\r\n\r\n            // and update UI\r\n            s._onTimer();\r\n\r\n            stop_html5_timer();\r\n\r\n          }\r\n\r\n        s.instanceCount = 0;\r\n        s._iO = {};\r\n\r\n        if (instanceOptions.onstop) {\r\n          instanceOptions.onstop.apply(s);\r\n        }\r\n\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Undocumented/internal: Sets autoPlay for RTMP.\r\n     *\r\n     * @param {boolean} autoPlay state\r\n     */\r\n\r\n    this.setAutoPlay = function(autoPlay) {\r\n\r\n      sm2._wD(s.id + ': Autoplay turned ' + (autoPlay ? 'on' : 'off'));\r\n      s._iO.autoPlay = autoPlay;\r\n\r\n      if (!s.isHTML5) {\r\n        flash._setAutoPlay(s.id, autoPlay);\r\n        if (autoPlay) {\r\n          // only increment the instanceCount if the sound isn't loaded (TODO: verify RTMP)\r\n          if (!s.instanceCount && s.readyState === 1) {\r\n            s.instanceCount++;\r\n            sm2._wD(s.id + ': Incremented instance count to ' + s.instanceCount);\r\n          }\r\n        }\r\n      }\r\n\r\n    };\r\n\r\n    /**\r\n     * Undocumented/internal: Returns the autoPlay boolean.\r\n     *\r\n     * @return {boolean} The current autoPlay value\r\n     */\r\n\r\n    this.getAutoPlay = function() {\r\n\r\n      return s._iO.autoPlay;\r\n\r\n    };\r\n\r\n    /**\r\n     * Sets the playback rate of a sound (HTML5-only.)\r\n     *\r\n     * @param {number} playbackRate (+/-)\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.setPlaybackRate = function(playbackRate) {\r\n\r\n      // Per Mozilla, limit acceptable values to prevent playback from stopping (unless allowOverride is truthy.)\r\n      // https://developer.mozilla.org/en-US/Apps/Build/Audio_and_video_delivery/WebAudio_playbackRate_explained\r\n      var normalizedRate = Math.max(0.5, Math.min(4, playbackRate));\r\n\r\n      // <d>\r\n      if (normalizedRate !== playbackRate) {\r\n        sm2._wD(s.id + ': setPlaybackRate(' + playbackRate + '): limiting rate to ' + normalizedRate, 2);\r\n      }\r\n      // </d>\r\n\r\n      if (s.isHTML5) {\r\n        try {\r\n          s._iO.playbackRate = normalizedRate;\r\n          s._a.playbackRate = normalizedRate;\r\n        } catch(e) {\r\n          sm2._wD(s.id + ': setPlaybackRate(' + normalizedRate + ') failed: ' + e.message, 2);\r\n        }\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Sets the position of a sound.\r\n     *\r\n     * @param {number} nMsecOffset Position (milliseconds)\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.setPosition = function(nMsecOffset) {\r\n\r\n      if (nMsecOffset === _undefined) {\r\n        nMsecOffset = 0;\r\n      }\r\n\r\n      var position, position1K,\r\n          // Use the duration from the instance options, if we don't have a track duration yet.\r\n          // position >= 0 and <= current available (loaded) duration\r\n          offset = (s.isHTML5 ? Math.max(nMsecOffset, 0) : Math.min(s.duration || s._iO.duration, Math.max(nMsecOffset, 0)));\r\n\r\n      s.position = offset;\r\n      position1K = s.position / msecScale;\r\n      s._resetOnPosition(s.position);\r\n      s._iO.position = offset;\r\n\r\n      if (!s.isHTML5) {\r\n\r\n        position = (fV === 9 ? s.position : position1K);\r\n\r\n        if (s.readyState && s.readyState !== 2) {\r\n          // if paused or not playing, will not resume (by playing)\r\n          flash._setPosition(s.id, position, (s.paused || !s.playState), s._iO.multiShot);\r\n        }\r\n\r\n      } else if (s._a) {\r\n\r\n        // Set the position in the canplay handler if the sound is not ready yet\r\n        if (s._html5_canplay) {\r\n\r\n          if (s._a.currentTime.toFixed(3) !== position1K.toFixed(3)) {\r\n\r\n            /**\r\n             * DOM/JS errors/exceptions to watch out for:\r\n             * if seek is beyond (loaded?) position, \"DOM exception 11\"\r\n             * \"INDEX_SIZE_ERR\": DOM exception 1\r\n             */\r\n            sm2._wD(s.id + ': setPosition(' + position1K + ')');\r\n\r\n            try {\r\n              s._a.currentTime = position1K;\r\n              if (s.playState === 0 || s.paused) {\r\n                // allow seek without auto-play/resume\r\n                s._a.pause();\r\n              }\r\n            } catch(e) {\r\n              sm2._wD(s.id + ': setPosition(' + position1K + ') failed: ' + e.message, 2);\r\n            }\r\n\r\n          }\r\n\r\n        } else if (position1K) {\r\n\r\n          // warn on non-zero seek attempts\r\n          sm2._wD(s.id + ': setPosition(' + position1K + '): Cannot seek yet, sound not ready', 2);\r\n          return s;\r\n\r\n        }\r\n\r\n        if (s.paused) {\r\n\r\n          // if paused, refresh UI right away by forcing update\r\n          s._onTimer(true);\r\n\r\n        }\r\n\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Pauses sound playback.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.pause = function(_bCallFlash) {\r\n\r\n      if (s.paused || (s.playState === 0 && s.readyState !== 1)) return s;\r\n\r\n      sm2._wD(s.id + ': pause()');\r\n      s.paused = true;\r\n\r\n      if (!s.isHTML5) {\r\n        if (_bCallFlash || _bCallFlash === _undefined) {\r\n          flash._pause(s.id, s._iO.multiShot);\r\n        }\r\n      } else {\r\n        s._setup_html5().pause();\r\n        stop_html5_timer();\r\n      }\r\n\r\n      if (s._iO.onpause) {\r\n        s._iO.onpause.apply(s);\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Resumes sound playback.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    /**\r\n     * When auto-loaded streams pause on buffer full they have a playState of 0.\r\n     * We need to make sure that the playState is set to 1 when these streams \"resume\".\r\n     * When a paused stream is resumed, we need to trigger the onplay() callback if it\r\n     * hasn't been called already. In this case since the sound is being played for the\r\n     * first time, I think it's more appropriate to call onplay() rather than onresume().\r\n     */\r\n\r\n    this.resume = function() {\r\n\r\n      var instanceOptions = s._iO;\r\n\r\n      if (!s.paused) return s;\r\n\r\n      sm2._wD(s.id + ': resume()');\r\n      s.paused = false;\r\n      s.playState = 1;\r\n\r\n      if (!s.isHTML5) {\r\n\r\n        if (instanceOptions.isMovieStar && !instanceOptions.serverURL) {\r\n          // Bizarre Webkit bug (Chrome reported via 8tracks.com dudes): AAC content paused for 30+ seconds(?) will not resume without a reposition.\r\n          s.setPosition(s.position);\r\n        }\r\n\r\n        // flash method is toggle-based (pause/resume)\r\n        flash._pause(s.id, instanceOptions.multiShot);\r\n\r\n      } else {\r\n\r\n        s._setup_html5().play();\r\n        start_html5_timer();\r\n\r\n      }\r\n\r\n      if (!onplay_called && instanceOptions.onplay) {\r\n\r\n        instanceOptions.onplay.apply(s);\r\n        onplay_called = true;\r\n\r\n      } else if (instanceOptions.onresume) {\r\n\r\n        instanceOptions.onresume.apply(s);\r\n\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Toggles sound playback.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.togglePause = function() {\r\n\r\n      sm2._wD(s.id + ': togglePause()');\r\n\r\n      if (s.playState === 0) {\r\n        s.play({\r\n          position: (fV === 9 && !s.isHTML5 ? s.position : s.position / msecScale)\r\n        });\r\n        return s;\r\n      }\r\n\r\n      if (s.paused) {\r\n        s.resume();\r\n      } else {\r\n        s.pause();\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Sets the panning (L-R) effect.\r\n     *\r\n     * @param {number} nPan The pan value (-100 to 100)\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.setPan = function(nPan, bInstanceOnly) {\r\n\r\n      if (nPan === _undefined) {\r\n        nPan = 0;\r\n      }\r\n\r\n      if (bInstanceOnly === _undefined) {\r\n        bInstanceOnly = false;\r\n      }\r\n\r\n      if (!s.isHTML5) {\r\n        flash._setPan(s.id, nPan);\r\n      } // else { no HTML5 pan? }\r\n\r\n      s._iO.pan = nPan;\r\n\r\n      if (!bInstanceOnly) {\r\n        s.pan = nPan;\r\n        s.options.pan = nPan;\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Sets the volume.\r\n     *\r\n     * @param {number} nVol The volume value (0 to 100)\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.setVolume = function(nVol, _bInstanceOnly) {\r\n\r\n      /**\r\n       * Note: Setting volume has no effect on iOS \"special snowflake\" devices.\r\n       * Hardware volume control overrides software, and volume\r\n       * will always return 1 per Apple docs. (iOS 4 + 5.)\r\n       * http://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/AddingSoundtoCanvasAnimations/AddingSoundtoCanvasAnimations.html\r\n       */\r\n\r\n      if (nVol === _undefined) {\r\n        nVol = 100;\r\n      }\r\n\r\n      if (_bInstanceOnly === _undefined) {\r\n        _bInstanceOnly = false;\r\n      }\r\n\r\n      if (!s.isHTML5) {\r\n\r\n        flash._setVolume(s.id, (sm2.muted && !s.muted) || s.muted ? 0 : nVol);\r\n\r\n      } else if (s._a) {\r\n\r\n        if (sm2.muted && !s.muted) {\r\n          s.muted = true;\r\n          s._a.muted = true;\r\n        }\r\n\r\n        // valid range for native HTML5 Audio(): 0-1\r\n        s._a.volume = Math.max(0, Math.min(1, nVol / 100));\r\n\r\n      }\r\n\r\n      s._iO.volume = nVol;\r\n\r\n      if (!_bInstanceOnly) {\r\n        s.volume = nVol;\r\n        s.options.volume = nVol;\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Mutes the sound.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.mute = function() {\r\n\r\n      s.muted = true;\r\n\r\n      if (!s.isHTML5) {\r\n        flash._setVolume(s.id, 0);\r\n      } else if (s._a) {\r\n        s._a.muted = true;\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Unmutes the sound.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.unmute = function() {\r\n\r\n      s.muted = false;\r\n      var hasIO = (s._iO.volume !== _undefined);\r\n\r\n      if (!s.isHTML5) {\r\n        flash._setVolume(s.id, hasIO ? s._iO.volume : s.options.volume);\r\n      } else if (s._a) {\r\n        s._a.muted = false;\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Toggles the muted state of a sound.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.toggleMute = function() {\r\n\r\n      return (s.muted ? s.unmute() : s.mute());\r\n\r\n    };\r\n\r\n    /**\r\n     * Registers a callback to be fired when a sound reaches a given position during playback.\r\n     *\r\n     * @param {number} nPosition The position to watch for\r\n     * @param {function} oMethod The relevant callback to fire\r\n     * @param {object} oScope Optional: The scope to apply the callback to\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.onPosition = function(nPosition, oMethod, oScope) {\r\n\r\n      // TODO: basic dupe checking?\r\n\r\n      onPositionItems.push({\r\n        position: parseInt(nPosition, 10),\r\n        method: oMethod,\r\n        scope: (oScope !== _undefined ? oScope : s),\r\n        fired: false\r\n      });\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    // legacy/backwards-compability: lower-case method name\r\n    this.onposition = this.onPosition;\r\n\r\n    /**\r\n     * Removes registered callback(s) from a sound, by position and/or callback.\r\n     *\r\n     * @param {number} nPosition The position to clear callback(s) for\r\n     * @param {function} oMethod Optional: Identify one callback to be removed when multiple listeners exist for one position\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.clearOnPosition = function(nPosition, oMethod) {\r\n\r\n      var i;\r\n\r\n      nPosition = parseInt(nPosition, 10);\r\n\r\n      if (isNaN(nPosition)) {\r\n        // safety check\r\n        return;\r\n      }\r\n\r\n      for (i = 0; i < onPositionItems.length; i++) {\r\n\r\n        if (nPosition === onPositionItems[i].position) {\r\n          // remove this item if no method was specified, or, if the method matches\r\n\r\n          if (!oMethod || (oMethod === onPositionItems[i].method)) {\r\n\r\n            if (onPositionItems[i].fired) {\r\n              // decrement \"fired\" counter, too\r\n              onPositionFired--;\r\n            }\r\n\r\n            onPositionItems.splice(i, 1);\r\n\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n    };\r\n\r\n    this._processOnPosition = function() {\r\n\r\n      var i, item, j = onPositionItems.length;\r\n\r\n      if (!j || !s.playState || onPositionFired >= j) return false;\r\n\r\n      for (i = j - 1; i >= 0; i--) {\r\n\r\n        item = onPositionItems[i];\r\n\r\n        if (!item.fired && s.position >= item.position) {\r\n\r\n          item.fired = true;\r\n          onPositionFired++;\r\n          item.method.apply(item.scope, [item.position]);\r\n\r\n          //  reset j -- onPositionItems.length can be changed in the item callback above... occasionally breaking the loop.\r\n          j = onPositionItems.length;\r\n\r\n        }\r\n\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    this._resetOnPosition = function(nPosition) {\r\n\r\n      // reset \"fired\" for items interested in this position\r\n      var i, item, j = onPositionItems.length;\r\n\r\n      if (!j) return false;\r\n\r\n      for (i = j - 1; i >= 0; i--) {\r\n\r\n        item = onPositionItems[i];\r\n\r\n        if (item.fired && nPosition <= item.position) {\r\n          item.fired = false;\r\n          onPositionFired--;\r\n        }\r\n\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    /**\r\n     * SMSound() private internals\r\n     * --------------------------------\r\n     */\r\n\r\n    applyFromTo = function() {\r\n\r\n      var instanceOptions = s._iO,\r\n          f = instanceOptions.from,\r\n          t = instanceOptions.to,\r\n          start, end;\r\n\r\n      end = function() {\r\n\r\n        // end has been reached.\r\n        sm2._wD(s.id + ': \"To\" time of ' + t + ' reached.');\r\n\r\n        // detach listener\r\n        s.clearOnPosition(t, end);\r\n\r\n        // stop should clear this, too\r\n        s.stop();\r\n\r\n      };\r\n\r\n      start = function() {\r\n\r\n        sm2._wD(s.id + ': Playing \"from\" ' + f);\r\n\r\n        // add listener for end\r\n        if (t !== null && !isNaN(t)) {\r\n          s.onPosition(t, end);\r\n        }\r\n\r\n      };\r\n\r\n      if (f !== null && !isNaN(f)) {\r\n\r\n        // apply to instance options, guaranteeing correct start position.\r\n        instanceOptions.position = f;\r\n\r\n        // multiShot timing can't be tracked, so prevent that.\r\n        instanceOptions.multiShot = false;\r\n\r\n        start();\r\n\r\n      }\r\n\r\n      // return updated instanceOptions including starting position\r\n      return instanceOptions;\r\n\r\n    };\r\n\r\n    attachOnPosition = function() {\r\n\r\n      var item,\r\n          op = s._iO.onposition;\r\n\r\n      // attach onposition things, if any, now.\r\n\r\n      if (op) {\r\n\r\n        for (item in op) {\r\n          if (op.hasOwnProperty(item)) {\r\n            s.onPosition(parseInt(item, 10), op[item]);\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n    };\r\n\r\n    detachOnPosition = function() {\r\n\r\n      var item,\r\n          op = s._iO.onposition;\r\n\r\n      // detach any onposition()-style listeners.\r\n\r\n      if (op) {\r\n\r\n        for (item in op) {\r\n          if (op.hasOwnProperty(item)) {\r\n            s.clearOnPosition(parseInt(item, 10));\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n    };\r\n\r\n    start_html5_timer = function() {\r\n\r\n      if (s.isHTML5) {\r\n        startTimer(s);\r\n      }\r\n\r\n    };\r\n\r\n    stop_html5_timer = function() {\r\n\r\n      if (s.isHTML5) {\r\n        stopTimer(s);\r\n      }\r\n\r\n    };\r\n\r\n    resetProperties = function(retainPosition) {\r\n\r\n      if (!retainPosition) {\r\n        onPositionItems = [];\r\n        onPositionFired = 0;\r\n      }\r\n\r\n      onplay_called = false;\r\n\r\n      s._hasTimer = null;\r\n      s._a = null;\r\n      s._html5_canplay = false;\r\n      s.bytesLoaded = null;\r\n      s.bytesTotal = null;\r\n      s.duration = (s._iO && s._iO.duration ? s._iO.duration : null);\r\n      s.durationEstimate = null;\r\n      s.buffered = [];\r\n\r\n      // legacy: 1D array\r\n      s.eqData = [];\r\n\r\n      s.eqData.left = [];\r\n      s.eqData.right = [];\r\n\r\n      s.failures = 0;\r\n      s.isBuffering = false;\r\n      s.instanceOptions = {};\r\n      s.instanceCount = 0;\r\n      s.loaded = false;\r\n      s.metadata = {};\r\n\r\n      // 0 = uninitialised, 1 = loading, 2 = failed/error, 3 = loaded/success\r\n      s.readyState = 0;\r\n\r\n      s.muted = false;\r\n      s.paused = false;\r\n\r\n      s.peakData = {\r\n        left: 0,\r\n        right: 0\r\n      };\r\n\r\n      s.waveformData = {\r\n        left: [],\r\n        right: []\r\n      };\r\n\r\n      s.playState = 0;\r\n      s.position = null;\r\n\r\n      s.id3 = {};\r\n\r\n    };\r\n\r\n    resetProperties();\r\n\r\n    /**\r\n     * Pseudo-private SMSound internals\r\n     * --------------------------------\r\n     */\r\n\r\n    this._onTimer = function(bForce) {\r\n\r\n      /**\r\n       * HTML5-only _whileplaying() etc.\r\n       * called from both HTML5 native events, and polling/interval-based timers\r\n       * mimics flash and fires only when time/duration change, so as to be polling-friendly\r\n       */\r\n\r\n      var duration, isNew = false, time, x = {};\r\n\r\n      if (s._hasTimer || bForce) {\r\n\r\n        // TODO: May not need to track readyState (1 = loading)\r\n\r\n        if (s._a && (bForce || ((s.playState > 0 || s.readyState === 1) && !s.paused))) {\r\n\r\n          duration = s._get_html5_duration();\r\n\r\n          if (duration !== lastHTML5State.duration) {\r\n\r\n            lastHTML5State.duration = duration;\r\n            s.duration = duration;\r\n            isNew = true;\r\n\r\n          }\r\n\r\n          // TODO: investigate why this goes wack if not set/re-set each time.\r\n          s.durationEstimate = s.duration;\r\n\r\n          time = (s._a.currentTime * msecScale || 0);\r\n\r\n          if (time !== lastHTML5State.time) {\r\n\r\n            lastHTML5State.time = time;\r\n            isNew = true;\r\n\r\n          }\r\n\r\n          if (isNew || bForce) {\r\n\r\n            s._whileplaying(time, x, x, x, x);\r\n\r\n          }\r\n\r\n        }/* else {\r\n\r\n          // sm2._wD('_onTimer: Warn for \"'+s.id+'\": '+(!s._a?'Could not find element. ':'')+(s.playState === 0?'playState bad, 0?':'playState = '+s.playState+', OK'));\r\n\r\n          return false;\r\n\r\n        }*/\r\n\r\n      }\r\n\r\n      return isNew;\r\n\r\n    };\r\n\r\n    this._get_html5_duration = function() {\r\n\r\n      var instanceOptions = s._iO,\r\n          // if audio object exists, use its duration - else, instance option duration (if provided - it's a hack, really, and should be retired) OR null\r\n          d = (s._a && s._a.duration ? s._a.duration * msecScale : (instanceOptions && instanceOptions.duration ? instanceOptions.duration : null)),\r\n          result = (d && !isNaN(d) && d !== Infinity ? d : null);\r\n\r\n      return result;\r\n\r\n    };\r\n\r\n    this._apply_loop = function(a, nLoops) {\r\n\r\n      /**\r\n       * boolean instead of \"loop\", for webkit? - spec says string. http://www.w3.org/TR/html-markup/audio.html#audio.attrs.loop\r\n       * note that loop is either off or infinite under HTML5, unlike Flash which allows arbitrary loop counts to be specified.\r\n       */\r\n\r\n      // <d>\r\n      if (!a.loop && nLoops > 1) {\r\n        sm2._wD('Note: Native HTML5 looping is infinite.', 1);\r\n      }\r\n      // </d>\r\n\r\n      a.loop = (nLoops > 1 ? 'loop' : '');\r\n\r\n    };\r\n\r\n    this._setup_html5 = function(options) {\r\n\r\n      var instanceOptions = mixin(s._iO, options),\r\n          a = useGlobalHTML5Audio ? globalHTML5Audio : s._a,\r\n          dURL = decodeURI(instanceOptions.url),\r\n          sameURL;\r\n\r\n      /**\r\n       * \"First things first, I, Poppa...\" (reset the previous state of the old sound, if playing)\r\n       * Fixes case with devices that can only play one sound at a time\r\n       * Otherwise, other sounds in mid-play will be terminated without warning and in a stuck state\r\n       */\r\n\r\n      if (useGlobalHTML5Audio) {\r\n\r\n        if (dURL === decodeURI(lastGlobalHTML5URL)) {\r\n          // global HTML5 audio: re-use of URL\r\n          sameURL = true;\r\n        }\r\n\r\n      } else if (dURL === decodeURI(lastURL)) {\r\n\r\n        // options URL is the same as the \"last\" URL, and we used (loaded) it\r\n        sameURL = true;\r\n\r\n      }\r\n\r\n      if (a) {\r\n\r\n        if (a._s) {\r\n\r\n          if (useGlobalHTML5Audio) {\r\n\r\n            if (a._s && a._s.playState && !sameURL) {\r\n\r\n              // global HTML5 audio case, and loading a new URL. stop the currently-playing one.\r\n              a._s.stop();\r\n\r\n            }\r\n\r\n          } else if (!useGlobalHTML5Audio && dURL === decodeURI(lastURL)) {\r\n\r\n            // non-global HTML5 reuse case: same url, ignore request\r\n            s._apply_loop(a, instanceOptions.loops);\r\n\r\n            return a;\r\n\r\n          }\r\n\r\n        }\r\n\r\n        if (!sameURL) {\r\n\r\n          // don't retain onPosition() stuff with new URLs.\r\n\r\n          if (lastURL) {\r\n            resetProperties(false);\r\n          }\r\n\r\n          // assign new HTML5 URL\r\n\r\n          a.src = instanceOptions.url;\r\n\r\n          s.url = instanceOptions.url;\r\n\r\n          lastURL = instanceOptions.url;\r\n\r\n          lastGlobalHTML5URL = instanceOptions.url;\r\n\r\n          a._called_load = false;\r\n\r\n        }\r\n\r\n      } else {\r\n\r\n        if (instanceOptions.autoLoad || instanceOptions.autoPlay) {\r\n\r\n          s._a = new Audio(instanceOptions.url);\r\n          s._a.load();\r\n\r\n        } else {\r\n\r\n          // null for stupid Opera 9.64 case\r\n          s._a = (isOpera && opera.version() < 10 ? new Audio(null) : new Audio());\r\n\r\n        }\r\n\r\n        // assign local reference\r\n        a = s._a;\r\n\r\n        a._called_load = false;\r\n\r\n        if (useGlobalHTML5Audio) {\r\n\r\n          globalHTML5Audio = a;\r\n\r\n        }\r\n\r\n      }\r\n\r\n      s.isHTML5 = true;\r\n\r\n      // store a ref on the track\r\n      s._a = a;\r\n\r\n      // store a ref on the audio\r\n      a._s = s;\r\n\r\n      add_html5_events();\r\n\r\n      s._apply_loop(a, instanceOptions.loops);\r\n\r\n      if (instanceOptions.autoLoad || instanceOptions.autoPlay) {\r\n\r\n        s.load();\r\n\r\n      } else {\r\n\r\n        // early HTML5 implementation (non-standard)\r\n        a.autobuffer = false;\r\n\r\n        // standard ('none' is also an option.)\r\n        a.preload = 'auto';\r\n\r\n      }\r\n\r\n      return a;\r\n\r\n    };\r\n\r\n    add_html5_events = function() {\r\n\r\n      if (s._a._added_events) return false;\r\n\r\n      var f;\r\n\r\n      function add(oEvt, oFn, bCapture) {\r\n        return s._a ? s._a.addEventListener(oEvt, oFn, bCapture || false) : null;\r\n      }\r\n\r\n      s._a._added_events = true;\r\n\r\n      for (f in html5_events) {\r\n        if (html5_events.hasOwnProperty(f)) {\r\n          add(f, html5_events[f]);\r\n        }\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    remove_html5_events = function() {\r\n\r\n      // Remove event listeners\r\n\r\n      var f;\r\n\r\n      function remove(oEvt, oFn, bCapture) {\r\n        return (s._a ? s._a.removeEventListener(oEvt, oFn, bCapture || false) : null);\r\n      }\r\n\r\n      sm2._wD(s.id + ': Removing event listeners');\r\n      s._a._added_events = false;\r\n\r\n      for (f in html5_events) {\r\n        if (html5_events.hasOwnProperty(f)) {\r\n          remove(f, html5_events[f]);\r\n        }\r\n      }\r\n\r\n    };\r\n\r\n    /**\r\n     * Pseudo-private event internals\r\n     * ------------------------------\r\n     */\r\n\r\n    this._onload = function(nSuccess) {\r\n\r\n      var fN,\r\n          // check for duration to prevent false positives from flash 8 when loading from cache.\r\n          loadOK = !!nSuccess || (!s.isHTML5 && fV === 8 && s.duration);\r\n\r\n      // <d>\r\n      fN = s.id + ': ';\r\n      sm2._wD(fN + (loadOK ? 'onload()' : 'Failed to load / invalid sound?' + (!s.duration ? ' Zero-length duration reported.' : ' -') + ' (' + s.url + ')'), (loadOK ? 1 : 2));\r\n\r\n      if (!loadOK && !s.isHTML5) {\r\n        if (sm2.sandbox.noRemote === true) {\r\n          sm2._wD(fN + str('noNet'), 1);\r\n        }\r\n        if (sm2.sandbox.noLocal === true) {\r\n          sm2._wD(fN + str('noLocal'), 1);\r\n        }\r\n      }\r\n      // </d>\r\n\r\n      s.loaded = loadOK;\r\n      s.readyState = (loadOK ? 3 : 2);\r\n      s._onbufferchange(0);\r\n\r\n      if (!loadOK && !s.isHTML5) {\r\n        // note: no error code from Flash.\r\n        s._onerror();\r\n      }\r\n\r\n      if (s._iO.onload) {\r\n        wrapCallback(s, function() {\r\n          s._iO.onload.apply(s, [loadOK]);\r\n        });\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    this._onerror = function(errorCode, description) {\r\n\r\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#error-codes\r\n      if (s._iO.onerror) {\r\n        wrapCallback(s, function() {\r\n          s._iO.onerror.apply(s, [errorCode, description]);\r\n        });\r\n      }\r\n\r\n    };\r\n\r\n    this._onbufferchange = function(nIsBuffering) {\r\n\r\n      // ignore if not playing\r\n      if (s.playState === 0) return false;\r\n\r\n      if ((nIsBuffering && s.isBuffering) || (!nIsBuffering && !s.isBuffering)) return false;\r\n\r\n      s.isBuffering = (nIsBuffering === 1);\r\n\r\n      if (s._iO.onbufferchange) {\r\n        sm2._wD(s.id + ': Buffer state change: ' + nIsBuffering);\r\n        s._iO.onbufferchange.apply(s, [nIsBuffering]);\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    /**\r\n     * Playback may have stopped due to buffering, or related reason.\r\n     * This state can be encountered on iOS < 6 when auto-play is blocked.\r\n     */\r\n\r\n    this._onsuspend = function() {\r\n\r\n      if (s._iO.onsuspend) {\r\n        sm2._wD(s.id + ': Playback suspended');\r\n        s._iO.onsuspend.apply(s);\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    /**\r\n     * flash 9/movieStar + RTMP-only method, should fire only once at most\r\n     * at this point we just recreate failed sounds rather than trying to reconnect\r\n     */\r\n\r\n    this._onfailure = function(msg, level, code) {\r\n\r\n      s.failures++;\r\n      sm2._wD(s.id + ': Failure (' + s.failures + '): ' + msg);\r\n\r\n      if (s._iO.onfailure && s.failures === 1) {\r\n        s._iO.onfailure(msg, level, code);\r\n      } else {\r\n        sm2._wD(s.id + ': Ignoring failure');\r\n      }\r\n\r\n    };\r\n\r\n    /**\r\n     * flash 9/movieStar + RTMP-only method for unhandled warnings/exceptions from Flash\r\n     * e.g., RTMP \"method missing\" warning (non-fatal) for getStreamLength on server\r\n     */\r\n\r\n    this._onwarning = function(msg, level, code) {\r\n\r\n      if (s._iO.onwarning) {\r\n        s._iO.onwarning(msg, level, code);\r\n      }\r\n\r\n    };\r\n\r\n    this._onfinish = function() {\r\n\r\n      // store local copy before it gets trashed...\r\n      var io_onfinish = s._iO.onfinish;\r\n\r\n      s._onbufferchange(0);\r\n      s._resetOnPosition(0);\r\n\r\n      // reset some state items\r\n      if (s.instanceCount) {\r\n\r\n        s.instanceCount--;\r\n\r\n        if (!s.instanceCount) {\r\n\r\n          // remove onPosition listeners, if any\r\n          detachOnPosition();\r\n\r\n          // reset instance options\r\n          s.playState = 0;\r\n          s.paused = false;\r\n          s.instanceCount = 0;\r\n          s.instanceOptions = {};\r\n          s._iO = {};\r\n          stop_html5_timer();\r\n\r\n          // reset position, too\r\n          if (s.isHTML5) {\r\n            s.position = 0;\r\n          }\r\n\r\n        }\r\n\r\n        if (!s.instanceCount || s._iO.multiShotEvents) {\r\n          // fire onfinish for last, or every instance\r\n          if (io_onfinish) {\r\n            sm2._wD(s.id + ': onfinish()');\r\n            wrapCallback(s, function() {\r\n              io_onfinish.apply(s);\r\n            });\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n    };\r\n\r\n    this._whileloading = function(nBytesLoaded, nBytesTotal, nDuration, nBufferLength) {\r\n\r\n      var instanceOptions = s._iO;\r\n\r\n      s.bytesLoaded = nBytesLoaded;\r\n      s.bytesTotal = nBytesTotal;\r\n      s.duration = Math.floor(nDuration);\r\n      s.bufferLength = nBufferLength;\r\n\r\n      if (!s.isHTML5 && !instanceOptions.isMovieStar) {\r\n\r\n        if (instanceOptions.duration) {\r\n          // use duration from options, if specified and larger. nobody should be specifying duration in options, actually, and it should be retired.\r\n          s.durationEstimate = (s.duration > instanceOptions.duration) ? s.duration : instanceOptions.duration;\r\n        } else {\r\n          s.durationEstimate = parseInt((s.bytesTotal / s.bytesLoaded) * s.duration, 10);\r\n        }\r\n\r\n      } else {\r\n\r\n        s.durationEstimate = s.duration;\r\n\r\n      }\r\n\r\n      // for flash, reflect sequential-load-style buffering\r\n      if (!s.isHTML5) {\r\n        s.buffered = [{\r\n          start: 0,\r\n          end: s.duration\r\n        }];\r\n      }\r\n\r\n      // allow whileloading to fire even if \"load\" fired under HTML5, due to HTTP range/partials\r\n      if ((s.readyState !== 3 || s.isHTML5) && instanceOptions.whileloading) {\r\n        instanceOptions.whileloading.apply(s);\r\n      }\r\n\r\n    };\r\n\r\n    this._whileplaying = function(nPosition, oPeakData, oWaveformDataLeft, oWaveformDataRight, oEQData) {\r\n\r\n      var instanceOptions = s._iO,\r\n          eqLeft;\r\n\r\n      // flash safety net\r\n      if (isNaN(nPosition) || nPosition === null) return false;\r\n\r\n      // Safari HTML5 play() may return small -ve values when starting from position: 0, eg. -50.120396875. Unexpected/invalid per W3, I think. Normalize to 0.\r\n      s.position = Math.max(0, nPosition);\r\n\r\n      s._processOnPosition();\r\n\r\n      if (!s.isHTML5 && fV > 8) {\r\n\r\n        if (instanceOptions.usePeakData && oPeakData !== _undefined && oPeakData) {\r\n          s.peakData = {\r\n            left: oPeakData.leftPeak,\r\n            right: oPeakData.rightPeak\r\n          };\r\n        }\r\n\r\n        if (instanceOptions.useWaveformData && oWaveformDataLeft !== _undefined && oWaveformDataLeft) {\r\n          s.waveformData = {\r\n            left: oWaveformDataLeft.split(','),\r\n            right: oWaveformDataRight.split(',')\r\n          };\r\n        }\r\n\r\n        if (instanceOptions.useEQData) {\r\n          if (oEQData !== _undefined && oEQData && oEQData.leftEQ) {\r\n            eqLeft = oEQData.leftEQ.split(',');\r\n            s.eqData = eqLeft;\r\n            s.eqData.left = eqLeft;\r\n            if (oEQData.rightEQ !== _undefined && oEQData.rightEQ) {\r\n              s.eqData.right = oEQData.rightEQ.split(',');\r\n            }\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n      if (s.playState === 1) {\r\n\r\n        // special case/hack: ensure buffering is false if loading from cache (and not yet started)\r\n        if (!s.isHTML5 && fV === 8 && !s.position && s.isBuffering) {\r\n          s._onbufferchange(0);\r\n        }\r\n\r\n        if (instanceOptions.whileplaying) {\r\n          // flash may call after actual finish\r\n          instanceOptions.whileplaying.apply(s);\r\n        }\r\n\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    this._oncaptiondata = function(oData) {\r\n\r\n      /**\r\n       * internal: flash 9 + NetStream (MovieStar/RTMP-only) feature\r\n       *\r\n       * @param {object} oData\r\n       */\r\n\r\n      sm2._wD(s.id + ': Caption data received.');\r\n\r\n      s.captiondata = oData;\r\n\r\n      if (s._iO.oncaptiondata) {\r\n        s._iO.oncaptiondata.apply(s, [oData]);\r\n      }\r\n\r\n    };\r\n\r\n    this._onmetadata = function(oMDProps, oMDData) {\r\n\r\n      /**\r\n       * internal: flash 9 + NetStream (MovieStar/RTMP-only) feature\r\n       * RTMP may include song title, MovieStar content may include encoding info\r\n       *\r\n       * @param {array} oMDProps (names)\r\n       * @param {array} oMDData (values)\r\n       */\r\n\r\n      sm2._wD(s.id + ': Metadata received.');\r\n\r\n      var oData = {}, i, j;\r\n\r\n      for (i = 0, j = oMDProps.length; i < j; i++) {\r\n        oData[oMDProps[i]] = oMDData[i];\r\n      }\r\n\r\n      s.metadata = oData;\r\n\r\n      if (s._iO.onmetadata) {\r\n        s._iO.onmetadata.call(s, s.metadata);\r\n      }\r\n\r\n    };\r\n\r\n    this._onid3 = function(oID3Props, oID3Data) {\r\n\r\n      /**\r\n       * internal: flash 8 + flash 9 ID3 feature\r\n       * may include artist, song title etc.\r\n       *\r\n       * @param {array} oID3Props (names)\r\n       * @param {array} oID3Data (values)\r\n       */\r\n\r\n      sm2._wD(s.id + ': ID3 data received.');\r\n\r\n      var oData = [], i, j;\r\n\r\n      for (i = 0, j = oID3Props.length; i < j; i++) {\r\n        oData[oID3Props[i]] = oID3Data[i];\r\n      }\r\n\r\n      s.id3 = mixin(s.id3, oData);\r\n\r\n      if (s._iO.onid3) {\r\n        s._iO.onid3.apply(s);\r\n      }\r\n\r\n    };\r\n\r\n    // flash/RTMP-only\r\n\r\n    this._onconnect = function(bSuccess) {\r\n\r\n      bSuccess = (bSuccess === 1);\r\n      sm2._wD(s.id + ': ' + (bSuccess ? 'Connected.' : 'Failed to connect? - ' + s.url), (bSuccess ? 1 : 2));\r\n      s.connected = bSuccess;\r\n\r\n      if (bSuccess) {\r\n\r\n        s.failures = 0;\r\n\r\n        if (idCheck(s.id)) {\r\n          if (s.getAutoPlay()) {\r\n            // only update the play state if auto playing\r\n            s.play(_undefined, s.getAutoPlay());\r\n          } else if (s._iO.autoLoad) {\r\n            s.load();\r\n          }\r\n        }\r\n\r\n        if (s._iO.onconnect) {\r\n          s._iO.onconnect.apply(s, [bSuccess]);\r\n        }\r\n\r\n      }\r\n\r\n    };\r\n\r\n    this._ondataerror = function(sError) {\r\n\r\n      // flash 9 wave/eq data handler\r\n      // hack: called at start, and end from flash at/after onfinish()\r\n      if (s.playState > 0) {\r\n        sm2._wD(s.id + ': Data error: ' + sError);\r\n        if (s._iO.ondataerror) {\r\n          s._iO.ondataerror.apply(s);\r\n        }\r\n      }\r\n\r\n    };\r\n\r\n    // <d>\r\n    this._debug();\r\n    // </d>\r\n\r\n  }; // SMSound()\r\n\r\n  /**\r\n   * Private SoundManager internals\r\n   * ------------------------------\r\n   */\r\n\r\n  getDocument = function() {\r\n\r\n    return (doc.body || doc.getElementsByTagName('div')[0]);\r\n\r\n  };\r\n\r\n  id = function(sID) {\r\n\r\n    return doc.getElementById(sID);\r\n\r\n  };\r\n\r\n  mixin = function(oMain, oAdd) {\r\n\r\n    // non-destructive merge\r\n    var o1 = (oMain || {}), o2, o;\r\n\r\n    // if unspecified, o2 is the default options object\r\n    o2 = (oAdd === _undefined ? sm2.defaultOptions : oAdd);\r\n\r\n    for (o in o2) {\r\n\r\n      if (o2.hasOwnProperty(o) && o1[o] === _undefined) {\r\n\r\n        if (typeof o2[o] !== 'object' || o2[o] === null) {\r\n\r\n          // assign directly\r\n          o1[o] = o2[o];\r\n\r\n        } else {\r\n\r\n          // recurse through o2\r\n          o1[o] = mixin(o1[o], o2[o]);\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    return o1;\r\n\r\n  };\r\n\r\n  wrapCallback = function(oSound, callback) {\r\n\r\n    /**\r\n     * 03/03/2013: Fix for Flash Player 11.6.602.171 + Flash 8 (flashVersion = 8) SWF issue\r\n     * setTimeout() fix for certain SMSound callbacks like onload() and onfinish(), where subsequent calls like play() and load() fail when Flash Player 11.6.602.171 is installed, and using soundManager with flashVersion = 8 (which is the default).\r\n     * Not sure of exact cause. Suspect race condition and/or invalid (NaN-style) position argument trickling down to the next JS -> Flash _start() call, in the play() case.\r\n     * Fix: setTimeout() to yield, plus safer null / NaN checking on position argument provided to Flash.\r\n     * https://getsatisfaction.com/schillmania/topics/recent_chrome_update_seems_to_have_broken_my_sm2_audio_player\r\n     */\r\n    if (!oSound.isHTML5 && fV === 8) {\r\n      window.setTimeout(callback, 0);\r\n    } else {\r\n      callback();\r\n    }\r\n\r\n  };\r\n\r\n  // additional soundManager properties that soundManager.setup() will accept\r\n\r\n  extraOptions = {\r\n    onready: 1,\r\n    ontimeout: 1,\r\n    defaultOptions: 1,\r\n    flash9Options: 1,\r\n    movieStarOptions: 1\r\n  };\r\n\r\n  assign = function(o, oParent) {\r\n\r\n    /**\r\n     * recursive assignment of properties, soundManager.setup() helper\r\n     * allows property assignment based on whitelist\r\n     */\r\n\r\n    var i,\r\n        result = true,\r\n        hasParent = (oParent !== _undefined),\r\n        setupOptions = sm2.setupOptions,\r\n        bonusOptions = extraOptions;\r\n\r\n    // <d>\r\n\r\n    // if soundManager.setup() called, show accepted parameters.\r\n\r\n    if (o === _undefined) {\r\n\r\n      result = [];\r\n\r\n      for (i in setupOptions) {\r\n\r\n        if (setupOptions.hasOwnProperty(i)) {\r\n          result.push(i);\r\n        }\r\n\r\n      }\r\n\r\n      for (i in bonusOptions) {\r\n\r\n        if (bonusOptions.hasOwnProperty(i)) {\r\n\r\n          if (typeof sm2[i] === 'object') {\r\n            result.push(i + ': {...}');\r\n          } else if (sm2[i] instanceof Function) {\r\n            result.push(i + ': function() {...}');\r\n          } else {\r\n            result.push(i);\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n      sm2._wD(str('setup', result.join(', ')));\r\n\r\n      return false;\r\n\r\n    }\r\n\r\n    // </d>\r\n\r\n    for (i in o) {\r\n\r\n      if (o.hasOwnProperty(i)) {\r\n\r\n        // if not an {object} we want to recurse through...\r\n\r\n        if (typeof o[i] !== 'object' || o[i] === null || o[i] instanceof Array || o[i] instanceof RegExp) {\r\n\r\n          // check \"allowed\" options\r\n\r\n          if (hasParent && bonusOptions[oParent] !== _undefined) {\r\n\r\n            // valid recursive / nested object option, eg., { defaultOptions: { volume: 50 } }\r\n            sm2[oParent][i] = o[i];\r\n\r\n          } else if (setupOptions[i] !== _undefined) {\r\n\r\n            // special case: assign to setupOptions object, which soundManager property references\r\n            sm2.setupOptions[i] = o[i];\r\n\r\n            // assign directly to soundManager, too\r\n            sm2[i] = o[i];\r\n\r\n          } else if (bonusOptions[i] === _undefined) {\r\n\r\n            // invalid or disallowed parameter. complain.\r\n            complain(str((sm2[i] === _undefined ? 'setupUndef' : 'setupError'), i), 2);\r\n\r\n            result = false;\r\n\r\n          } else if (sm2[i] instanceof Function) {\r\n\r\n            /**\r\n             * valid extraOptions (bonusOptions) parameter.\r\n             * is it a method, like onready/ontimeout? call it.\r\n             * multiple parameters should be in an array, eg. soundManager.setup({onready: [myHandler, myScope]});\r\n             */\r\n            sm2[i].apply(sm2, (o[i] instanceof Array ? o[i] : [o[i]]));\r\n\r\n          } else {\r\n\r\n            // good old-fashioned direct assignment\r\n            sm2[i] = o[i];\r\n\r\n          }\r\n\r\n        } else if (bonusOptions[i] === _undefined) {\r\n\r\n          // recursion case, eg., { defaultOptions: { ... } }\r\n\r\n          // invalid or disallowed parameter. complain.\r\n          complain(str((sm2[i] === _undefined ? 'setupUndef' : 'setupError'), i), 2);\r\n\r\n          result = false;\r\n\r\n        } else {\r\n\r\n          // recurse through object\r\n          return assign(o[i], i);\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  function preferFlashCheck(kind) {\r\n\r\n    // whether flash should play a given type\r\n    return (sm2.preferFlash && hasFlash && !sm2.ignoreFlash && (sm2.flash[kind] !== _undefined && sm2.flash[kind]));\r\n\r\n  }\r\n\r\n  /**\r\n   * Internal DOM2-level event helpers\r\n   * ---------------------------------\r\n   */\r\n\r\n  event = (function() {\r\n\r\n    // normalize event methods\r\n    var old = (window.attachEvent),\r\n    evt = {\r\n      add: (old ? 'attachEvent' : 'addEventListener'),\r\n      remove: (old ? 'detachEvent' : 'removeEventListener')\r\n    };\r\n\r\n    // normalize \"on\" event prefix, optional capture argument\r\n    function getArgs(oArgs) {\r\n\r\n      var args = slice.call(oArgs),\r\n          len = args.length;\r\n\r\n      if (old) {\r\n        // prefix\r\n        args[1] = 'on' + args[1];\r\n        if (len > 3) {\r\n          // no capture\r\n          args.pop();\r\n        }\r\n      } else if (len === 3) {\r\n        args.push(false);\r\n      }\r\n\r\n      return args;\r\n\r\n    }\r\n\r\n    function apply(args, sType) {\r\n\r\n      // normalize and call the event method, with the proper arguments\r\n      var element = args.shift(),\r\n          method = [evt[sType]];\r\n\r\n      if (old) {\r\n        // old IE can't do apply().\r\n        element[method](args[0], args[1]);\r\n      } else {\r\n        element[method].apply(element, args);\r\n      }\r\n\r\n    }\r\n\r\n    function add() {\r\n      apply(getArgs(arguments), 'add');\r\n    }\r\n\r\n    function remove() {\r\n      apply(getArgs(arguments), 'remove');\r\n    }\r\n\r\n    return {\r\n      add: add,\r\n      remove: remove\r\n    };\r\n\r\n  }());\r\n\r\n  /**\r\n   * Internal HTML5 event handling\r\n   * -----------------------------\r\n   */\r\n\r\n  function html5_event(oFn) {\r\n\r\n    // wrap html5 event handlers so we don't call them on destroyed and/or unloaded sounds\r\n\r\n    return function(e) {\r\n\r\n      var s = this._s,\r\n          result;\r\n\r\n      if (!s || !s._a) {\r\n        // <d>\r\n        if (s && s.id) {\r\n          sm2._wD(s.id + ': Ignoring ' + e.type);\r\n        } else {\r\n          sm2._wD(h5 + 'Ignoring ' + e.type);\r\n        }\r\n        // </d>\r\n        result = null;\r\n      } else {\r\n        result = oFn.call(this, e);\r\n      }\r\n\r\n      return result;\r\n\r\n    };\r\n\r\n  }\r\n\r\n  html5_events = {\r\n\r\n    // HTML5 event-name-to-handler map\r\n\r\n    abort: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': abort');\r\n\r\n    }),\r\n\r\n    // enough has loaded to play\r\n\r\n    canplay: html5_event(function() {\r\n\r\n      var s = this._s,\r\n          position1K;\r\n\r\n      if (s._html5_canplay) {\r\n        // this event has already fired. ignore.\r\n        return;\r\n      }\r\n\r\n      s._html5_canplay = true;\r\n      sm2._wD(s.id + ': canplay');\r\n      s._onbufferchange(0);\r\n\r\n      // position according to instance options\r\n      position1K = (s._iO.position !== _undefined && !isNaN(s._iO.position) ? s._iO.position / msecScale : null);\r\n\r\n      // set the position if position was provided before the sound loaded\r\n      if (this.currentTime !== position1K) {\r\n        sm2._wD(s.id + ': canplay: Setting position to ' + position1K);\r\n        try {\r\n          this.currentTime = position1K;\r\n        } catch(ee) {\r\n          sm2._wD(s.id + ': canplay: Setting position of ' + position1K + ' failed: ' + ee.message, 2);\r\n        }\r\n      }\r\n\r\n      // hack for HTML5 from/to case\r\n      if (s._iO._oncanplay) {\r\n        s._iO._oncanplay();\r\n      }\r\n\r\n    }),\r\n\r\n    canplaythrough: html5_event(function() {\r\n\r\n      var s = this._s;\r\n\r\n      if (!s.loaded) {\r\n        s._onbufferchange(0);\r\n        s._whileloading(s.bytesLoaded, s.bytesTotal, s._get_html5_duration());\r\n        s._onload(true);\r\n      }\r\n\r\n    }),\r\n\r\n    durationchange: html5_event(function() {\r\n\r\n      // durationchange may fire at various times, probably the safest way to capture accurate/final duration.\r\n\r\n      var s = this._s,\r\n          duration;\r\n\r\n      duration = s._get_html5_duration();\r\n\r\n      if (!isNaN(duration) && duration !== s.duration) {\r\n\r\n        sm2._wD(this._s.id + ': durationchange (' + duration + ')' + (s.duration ? ', previously ' + s.duration : ''));\r\n\r\n        s.durationEstimate = s.duration = duration;\r\n\r\n      }\r\n\r\n    }),\r\n\r\n    // TODO: Reserved for potential use\r\n    /*\r\n    emptied: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': emptied');\r\n\r\n    }),\r\n    */\r\n\r\n    ended: html5_event(function() {\r\n\r\n      var s = this._s;\r\n\r\n      sm2._wD(s.id + ': ended');\r\n\r\n      s._onfinish();\r\n\r\n    }),\r\n\r\n    error: html5_event(function() {\r\n\r\n      var description = (html5ErrorCodes[this.error.code] || null);\r\n      sm2._wD(this._s.id + ': HTML5 error, code ' + this.error.code + (description ? ' (' + description + ')' : ''));\r\n      this._s._onload(false);\r\n      this._s._onerror(this.error.code, description);\r\n\r\n    }),\r\n\r\n    loadeddata: html5_event(function() {\r\n\r\n      var s = this._s;\r\n\r\n      sm2._wD(s.id + ': loadeddata');\r\n\r\n      // safari seems to nicely report progress events, eventually totalling 100%\r\n      if (!s._loaded && !isSafari) {\r\n        s.duration = s._get_html5_duration();\r\n      }\r\n\r\n    }),\r\n\r\n    loadedmetadata: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': loadedmetadata');\r\n\r\n    }),\r\n\r\n    loadstart: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': loadstart');\r\n      // assume buffering at first\r\n      this._s._onbufferchange(1);\r\n\r\n    }),\r\n\r\n    play: html5_event(function() {\r\n\r\n      // sm2._wD(this._s.id + ': play()');\r\n      // once play starts, no buffering\r\n      this._s._onbufferchange(0);\r\n\r\n    }),\r\n\r\n    playing: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': playing ' + String.fromCharCode(9835));\r\n      // once play starts, no buffering\r\n      this._s._onbufferchange(0);\r\n\r\n    }),\r\n\r\n    progress: html5_event(function(e) {\r\n\r\n      // note: can fire repeatedly after \"loaded\" event, due to use of HTTP range/partials\r\n\r\n      var s = this._s,\r\n          i, j, progStr, buffered = 0,\r\n          isProgress = (e.type === 'progress'),\r\n          ranges = e.target.buffered,\r\n          // firefox 3.6 implements e.loaded/total (bytes)\r\n          loaded = (e.loaded || 0),\r\n          total = (e.total || 1);\r\n\r\n      // reset the \"buffered\" (loaded byte ranges) array\r\n      s.buffered = [];\r\n\r\n      if (ranges && ranges.length) {\r\n\r\n        // if loaded is 0, try TimeRanges implementation as % of load\r\n        // https://developer.mozilla.org/en/DOM/TimeRanges\r\n\r\n        // re-build \"buffered\" array\r\n        // HTML5 returns seconds. SM2 API uses msec for setPosition() etc., whether Flash or HTML5.\r\n        for (i = 0, j = ranges.length; i < j; i++) {\r\n          s.buffered.push({\r\n            start: ranges.start(i) * msecScale,\r\n            end: ranges.end(i) * msecScale\r\n          });\r\n        }\r\n\r\n        // use the last value locally\r\n        buffered = (ranges.end(0) - ranges.start(0)) * msecScale;\r\n\r\n        // linear case, buffer sum; does not account for seeking and HTTP partials / byte ranges\r\n        loaded = Math.min(1, buffered / (e.target.duration * msecScale));\r\n\r\n        // <d>\r\n        if (isProgress && ranges.length > 1) {\r\n          progStr = [];\r\n          j = ranges.length;\r\n          for (i = 0; i < j; i++) {\r\n            progStr.push((e.target.buffered.start(i) * msecScale) + '-' + (e.target.buffered.end(i) * msecScale));\r\n          }\r\n          sm2._wD(this._s.id + ': progress, timeRanges: ' + progStr.join(', '));\r\n        }\r\n\r\n        if (isProgress && !isNaN(loaded)) {\r\n          sm2._wD(this._s.id + ': progress, ' + Math.floor(loaded * 100) + '% loaded');\r\n        }\r\n        // </d>\r\n\r\n      }\r\n\r\n      if (!isNaN(loaded)) {\r\n\r\n        // TODO: prevent calls with duplicate values.\r\n        s._whileloading(loaded, total, s._get_html5_duration());\r\n        if (loaded && total && loaded === total) {\r\n          // in case \"onload\" doesn't fire (eg. gecko 1.9.2)\r\n          html5_events.canplaythrough.call(this, e);\r\n        }\r\n\r\n      }\r\n\r\n    }),\r\n\r\n    ratechange: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': ratechange');\r\n\r\n    }),\r\n\r\n    suspend: html5_event(function(e) {\r\n\r\n      // download paused/stopped, may have finished (eg. onload)\r\n      var s = this._s;\r\n\r\n      sm2._wD(this._s.id + ': suspend');\r\n      html5_events.progress.call(this, e);\r\n      s._onsuspend();\r\n\r\n    }),\r\n\r\n    stalled: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': stalled');\r\n\r\n    }),\r\n\r\n    timeupdate: html5_event(function() {\r\n\r\n      this._s._onTimer();\r\n\r\n    }),\r\n\r\n    waiting: html5_event(function() {\r\n\r\n      var s = this._s;\r\n\r\n      // see also: seeking\r\n      sm2._wD(this._s.id + ': waiting');\r\n\r\n      // playback faster than download rate, etc.\r\n      s._onbufferchange(1);\r\n\r\n    })\r\n\r\n  };\r\n\r\n  html5OK = function(iO) {\r\n\r\n    // playability test based on URL or MIME type\r\n\r\n    var result;\r\n\r\n    if (!iO || (!iO.type && !iO.url && !iO.serverURL)) {\r\n\r\n      // nothing to check\r\n      result = false;\r\n\r\n    } else if (iO.serverURL || (iO.type && preferFlashCheck(iO.type))) {\r\n\r\n      // RTMP, or preferring flash\r\n      result = false;\r\n\r\n    } else {\r\n\r\n      // Use type, if specified. Pass data: URIs to HTML5. If HTML5-only mode, no other options, so just give 'er\r\n      result = ((iO.type ? html5CanPlay({ type: iO.type }) : html5CanPlay({ url: iO.url }) || sm2.html5Only || iO.url.match(/data:/i)));\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  html5Unload = function(oAudio) {\r\n\r\n    /**\r\n     * Internal method: Unload media, and cancel any current/pending network requests.\r\n     * Firefox can load an empty URL, which allegedly destroys the decoder and stops the download.\r\n     * https://developer.mozilla.org/En/Using_audio_and_video_in_Firefox#Stopping_the_download_of_media\r\n     * However, Firefox has been seen loading a relative URL from '' and thus requesting the hosting page on unload.\r\n     * Other UA behaviour is unclear, so everyone else gets an about:blank-style URL.\r\n     */\r\n\r\n    var url;\r\n\r\n    if (oAudio) {\r\n\r\n      // Firefox and Chrome accept short WAVe data: URIs. Chome dislikes audio/wav, but accepts audio/wav for data: MIME.\r\n      // Desktop Safari complains / fails on data: URI, so it gets about:blank.\r\n      url = (isSafari ? emptyURL : (sm2.html5.canPlayType('audio/wav') ? emptyWAV : emptyURL));\r\n\r\n      oAudio.src = url;\r\n\r\n      // reset some state, too\r\n      if (oAudio._called_unload !== _undefined) {\r\n        oAudio._called_load = false;\r\n      }\r\n\r\n    }\r\n\r\n    if (useGlobalHTML5Audio) {\r\n\r\n      // ensure URL state is trashed, also\r\n      lastGlobalHTML5URL = null;\r\n\r\n    }\r\n\r\n    return url;\r\n\r\n  };\r\n\r\n  html5CanPlay = function(o) {\r\n\r\n    /**\r\n     * Try to find MIME, test and return truthiness\r\n     * o = {\r\n     *  url: '/path/to/an.mp3',\r\n     *  type: 'audio/mp3'\r\n     * }\r\n     */\r\n\r\n    if (!sm2.useHTML5Audio || !sm2.hasHTML5) return false;\r\n\r\n    var url = (o.url || null),\r\n        mime = (o.type || null),\r\n        aF = sm2.audioFormats,\r\n        result,\r\n        offset,\r\n        fileExt,\r\n        item;\r\n\r\n    // account for known cases like audio/mp3\r\n\r\n    if (mime && sm2.html5[mime] !== _undefined) return (sm2.html5[mime] && !preferFlashCheck(mime));\r\n\r\n    if (!html5Ext) {\r\n\r\n      html5Ext = [];\r\n\r\n      for (item in aF) {\r\n\r\n        if (aF.hasOwnProperty(item)) {\r\n\r\n          html5Ext.push(item);\r\n\r\n          if (aF[item].related) {\r\n            html5Ext = html5Ext.concat(aF[item].related);\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n      html5Ext = new RegExp('\\\\.(' + html5Ext.join('|') + ')(\\\\?.*)?$', 'i');\r\n\r\n    }\r\n\r\n    // TODO: Strip URL queries, etc.\r\n    fileExt = (url ? url.toLowerCase().match(html5Ext) : null);\r\n\r\n    if (!fileExt || !fileExt.length) {\r\n\r\n      if (!mime) {\r\n\r\n        result = false;\r\n\r\n      } else {\r\n\r\n        // audio/mp3 -> mp3, result should be known\r\n        offset = mime.indexOf(';');\r\n\r\n        // strip \"audio/X; codecs...\"\r\n        fileExt = (offset !== -1 ? mime.substr(0, offset) : mime).substr(6);\r\n\r\n      }\r\n\r\n    } else {\r\n\r\n      // match the raw extension name - \"mp3\", for example\r\n      fileExt = fileExt[1];\r\n\r\n    }\r\n\r\n    if (fileExt && sm2.html5[fileExt] !== _undefined) {\r\n\r\n      // result known\r\n      result = (sm2.html5[fileExt] && !preferFlashCheck(fileExt));\r\n\r\n    } else {\r\n\r\n      mime = 'audio/' + fileExt;\r\n      result = sm2.html5.canPlayType({ type: mime });\r\n\r\n      sm2.html5[fileExt] = result;\r\n\r\n      // sm2._wD('canPlayType, found result: ' + result);\r\n      result = (result && sm2.html5[mime] && !preferFlashCheck(mime));\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  testHTML5 = function() {\r\n\r\n    /**\r\n     * Internal: Iterates over audioFormats, determining support eg. audio/mp3, audio/mpeg and so on\r\n     * assigns results to html5[] and flash[].\r\n     */\r\n\r\n    if (!sm2.useHTML5Audio || !sm2.hasHTML5) {\r\n\r\n      // without HTML5, we need Flash.\r\n      sm2.html5.usingFlash = true;\r\n      needsFlash = true;\r\n\r\n      return false;\r\n\r\n    }\r\n\r\n    // double-whammy: Opera 9.64 throws WRONG_ARGUMENTS_ERR if no parameter passed to Audio(), and Webkit + iOS happily tries to load \"null\" as a URL. :/\r\n    var a = (Audio !== _undefined ? (isOpera && opera.version() < 10 ? new Audio(null) : new Audio()) : null),\r\n        item, lookup, support = {}, aF, i;\r\n\r\n    function cp(m) {\r\n\r\n      var canPlay, j,\r\n          result = false,\r\n          isOK = false;\r\n\r\n      if (!a || typeof a.canPlayType !== 'function') return result;\r\n\r\n      if (m instanceof Array) {\r\n\r\n        // iterate through all mime types, return any successes\r\n\r\n        for (i = 0, j = m.length; i < j; i++) {\r\n\r\n          if (sm2.html5[m[i]] || a.canPlayType(m[i]).match(sm2.html5Test)) {\r\n\r\n            isOK = true;\r\n            sm2.html5[m[i]] = true;\r\n\r\n            // note flash support, too\r\n            sm2.flash[m[i]] = !!(m[i].match(flashMIME));\r\n\r\n          }\r\n\r\n        }\r\n\r\n        result = isOK;\r\n\r\n      } else {\r\n\r\n        canPlay = (a && typeof a.canPlayType === 'function' ? a.canPlayType(m) : false);\r\n        result = !!(canPlay && (canPlay.match(sm2.html5Test)));\r\n\r\n      }\r\n\r\n      return result;\r\n\r\n    }\r\n\r\n    // test all registered formats + codecs\r\n\r\n    aF = sm2.audioFormats;\r\n\r\n    for (item in aF) {\r\n\r\n      if (aF.hasOwnProperty(item)) {\r\n\r\n        lookup = 'audio/' + item;\r\n\r\n        support[item] = cp(aF[item].type);\r\n\r\n        // write back generic type too, eg. audio/mp3\r\n        support[lookup] = support[item];\r\n\r\n        // assign flash\r\n        if (item.match(flashMIME)) {\r\n\r\n          sm2.flash[item] = true;\r\n          sm2.flash[lookup] = true;\r\n\r\n        } else {\r\n\r\n          sm2.flash[item] = false;\r\n          sm2.flash[lookup] = false;\r\n\r\n        }\r\n\r\n        // assign result to related formats, too\r\n\r\n        if (aF[item] && aF[item].related) {\r\n\r\n          for (i = aF[item].related.length - 1; i >= 0; i--) {\r\n\r\n            // eg. audio/m4a\r\n            support['audio/' + aF[item].related[i]] = support[item];\r\n            sm2.html5[aF[item].related[i]] = support[item];\r\n            sm2.flash[aF[item].related[i]] = support[item];\r\n\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    support.canPlayType = (a ? cp : null);\r\n    sm2.html5 = mixin(sm2.html5, support);\r\n\r\n    sm2.html5.usingFlash = featureCheck();\r\n    needsFlash = sm2.html5.usingFlash;\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  strings = {\r\n\r\n    // <d>\r\n    notReady: 'Unavailable - wait until onready() has fired.',\r\n    notOK: 'Audio support is not available.',\r\n    domError: sm + 'exception caught while appending SWF to DOM.',\r\n    spcWmode: 'Removing wmode, preventing known SWF loading issue(s)',\r\n    swf404: smc + 'Verify that %s is a valid path.',\r\n    tryDebug: 'Try ' + sm + '.debugFlash = true for more security details (output goes to SWF.)',\r\n    checkSWF: 'See SWF output for more debug info.',\r\n    localFail: smc + 'Non-HTTP page (' + doc.location.protocol + ' URL?) Review Flash player security settings for this special case:\\nhttp://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager04.html\\nMay need to add/allow path, eg. c:/sm2/ or /users/me/sm2/',\r\n    waitFocus: smc + 'Special case: Waiting for SWF to load with window focus...',\r\n    waitForever: smc + 'Waiting indefinitely for Flash (will recover if unblocked)...',\r\n    waitSWF: smc + 'Waiting for 100% SWF load...',\r\n    needFunction: smc + 'Function object expected for %s',\r\n    badID: 'Sound ID \"%s\" should be a string, starting with a non-numeric character',\r\n    currentObj: smc + '_debug(): Current sound objects',\r\n    waitOnload: smc + 'Waiting for window.onload()',\r\n    docLoaded: smc + 'Document already loaded',\r\n    onload: smc + 'initComplete(): calling soundManager.onload()',\r\n    onloadOK: sm + '.onload() complete',\r\n    didInit: smc + 'init(): Already called?',\r\n    secNote: 'Flash security note: Network/internet URLs will not load due to security restrictions. Access can be configured via Flash Player Global Security Settings Page: http://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager04.html',\r\n    badRemove: smc + 'Failed to remove Flash node.',\r\n    shutdown: sm + '.disable(): Shutting down',\r\n    queue: smc + 'Queueing %s handler',\r\n    smError: 'SMSound.load(): Exception: JS-Flash communication failed, or JS error.',\r\n    fbTimeout: 'No flash response, applying .' + swfCSS.swfTimedout + ' CSS...',\r\n    fbLoaded: 'Flash loaded',\r\n    fbHandler: smc + 'flashBlockHandler()',\r\n    manURL: 'SMSound.load(): Using manually-assigned URL',\r\n    onURL: sm + '.load(): current URL already assigned.',\r\n    badFV: sm + '.flashVersion must be 8 or 9. \"%s\" is invalid. Reverting to %s.',\r\n    as2loop: 'Note: Setting stream:false so looping can work (flash 8 limitation)',\r\n    noNSLoop: 'Note: Looping not implemented for MovieStar formats',\r\n    needfl9: 'Note: Switching to flash 9, required for MP4 formats.',\r\n    mfTimeout: 'Setting flashLoadTimeout = 0 (infinite) for off-screen, mobile flash case',\r\n    needFlash: smc + 'Fatal error: Flash is needed to play some required formats, but is not available.',\r\n    gotFocus: smc + 'Got window focus.',\r\n    policy: 'Enabling usePolicyFile for data access',\r\n    setup: sm + '.setup(): allowed parameters: %s',\r\n    setupError: sm + '.setup(): \"%s\" cannot be assigned with this method.',\r\n    setupUndef: sm + '.setup(): Could not find option \"%s\"',\r\n    setupLate: sm + '.setup(): url, flashVersion and html5Test property changes will not take effect until reboot().',\r\n    noURL: smc + 'Flash URL required. Call soundManager.setup({url:...}) to get started.',\r\n    sm2Loaded: 'SoundManager 2: Ready. ' + String.fromCharCode(10003),\r\n    reset: sm + '.reset(): Removing event callbacks',\r\n    mobileUA: 'Mobile UA detected, preferring HTML5 by default.',\r\n    globalHTML5: 'Using singleton HTML5 Audio() pattern for this device.',\r\n    ignoreMobile: 'Ignoring mobile restrictions for this device.'\r\n    // </d>\r\n\r\n  };\r\n\r\n  str = function() {\r\n\r\n    // internal string replace helper.\r\n    // arguments: o [,items to replace]\r\n    // <d>\r\n\r\n    var args,\r\n        i, j, o,\r\n        sstr;\r\n\r\n    // real array, please\r\n    args = slice.call(arguments);\r\n\r\n    // first argument\r\n    o = args.shift();\r\n\r\n    sstr = (strings && strings[o] ? strings[o] : '');\r\n\r\n    if (sstr && args && args.length) {\r\n      for (i = 0, j = args.length; i < j; i++) {\r\n        sstr = sstr.replace('%s', args[i]);\r\n      }\r\n    }\r\n\r\n    return sstr;\r\n    // </d>\r\n\r\n  };\r\n\r\n  loopFix = function(sOpt) {\r\n\r\n    // flash 8 requires stream = false for looping to work\r\n    if (fV === 8 && sOpt.loops > 1 && sOpt.stream) {\r\n      _wDS('as2loop');\r\n      sOpt.stream = false;\r\n    }\r\n\r\n    return sOpt;\r\n\r\n  };\r\n\r\n  policyFix = function(sOpt, sPre) {\r\n\r\n    if (sOpt && !sOpt.usePolicyFile && (sOpt.onid3 || sOpt.usePeakData || sOpt.useWaveformData || sOpt.useEQData)) {\r\n      sm2._wD((sPre || '') + str('policy'));\r\n      sOpt.usePolicyFile = true;\r\n    }\r\n\r\n    return sOpt;\r\n\r\n  };\r\n\r\n  complain = function(sMsg) {\r\n\r\n    // <d>\r\n    if (hasConsole && console.warn !== _undefined) {\r\n      console.warn(sMsg);\r\n    } else {\r\n      sm2._wD(sMsg);\r\n    }\r\n    // </d>\r\n\r\n  };\r\n\r\n  doNothing = function() {\r\n\r\n    return false;\r\n\r\n  };\r\n\r\n  disableObject = function(o) {\r\n\r\n    var oProp;\r\n\r\n    for (oProp in o) {\r\n      if (o.hasOwnProperty(oProp) && typeof o[oProp] === 'function') {\r\n        o[oProp] = doNothing;\r\n      }\r\n    }\r\n\r\n    oProp = null;\r\n\r\n  };\r\n\r\n  failSafely = function(bNoDisable) {\r\n\r\n    // general failure exception handler\r\n\r\n    if (bNoDisable === _undefined) {\r\n      bNoDisable = false;\r\n    }\r\n\r\n    if (disabled || bNoDisable) {\r\n      sm2.disable(bNoDisable);\r\n    }\r\n\r\n  };\r\n\r\n  normalizeMovieURL = function(movieURL) {\r\n\r\n    var urlParams = null, url;\r\n\r\n    if (movieURL) {\r\n\r\n      if (movieURL.match(/\\.swf(\\?.*)?$/i)) {\r\n\r\n        urlParams = movieURL.substr(movieURL.toLowerCase().lastIndexOf('.swf?') + 4);\r\n\r\n        // assume user knows what they're doing\r\n        if (urlParams) return movieURL;\r\n\r\n      } else if (movieURL.lastIndexOf('/') !== movieURL.length - 1) {\r\n\r\n        // append trailing slash, if needed\r\n        movieURL += '/';\r\n\r\n      }\r\n\r\n    }\r\n\r\n    url = (movieURL && movieURL.lastIndexOf('/') !== -1 ? movieURL.substr(0, movieURL.lastIndexOf('/') + 1) : './') + sm2.movieURL;\r\n\r\n    if (sm2.noSWFCache) {\r\n      url += ('?ts=' + new Date().getTime());\r\n    }\r\n\r\n    return url;\r\n\r\n  };\r\n\r\n  setVersionInfo = function() {\r\n\r\n    // short-hand for internal use\r\n\r\n    fV = parseInt(sm2.flashVersion, 10);\r\n\r\n    if (fV !== 8 && fV !== 9) {\r\n      sm2._wD(str('badFV', fV, defaultFlashVersion));\r\n      sm2.flashVersion = fV = defaultFlashVersion;\r\n    }\r\n\r\n    // debug flash movie, if applicable\r\n\r\n    var isDebug = (sm2.debugMode || sm2.debugFlash ? '_debug.swf' : '.swf');\r\n\r\n    if (sm2.useHTML5Audio && !sm2.html5Only && sm2.audioFormats.mp4.required && fV < 9) {\r\n      sm2._wD(str('needfl9'));\r\n      sm2.flashVersion = fV = 9;\r\n    }\r\n\r\n    sm2.version = sm2.versionNumber + (sm2.html5Only ? ' (HTML5-only mode)' : (fV === 9 ? ' (AS3/Flash 9)' : ' (AS2/Flash 8)'));\r\n\r\n    // set up default options\r\n    if (fV > 8) {\r\n\r\n      // +flash 9 base options\r\n      sm2.defaultOptions = mixin(sm2.defaultOptions, sm2.flash9Options);\r\n      sm2.features.buffering = true;\r\n\r\n      // +moviestar support\r\n      sm2.defaultOptions = mixin(sm2.defaultOptions, sm2.movieStarOptions);\r\n      sm2.filePatterns.flash9 = new RegExp('\\\\.(mp3|' + netStreamTypes.join('|') + ')(\\\\?.*)?$', 'i');\r\n      sm2.features.movieStar = true;\r\n\r\n    } else {\r\n\r\n      sm2.features.movieStar = false;\r\n\r\n    }\r\n\r\n    // regExp for flash canPlay(), etc.\r\n    sm2.filePattern = sm2.filePatterns[(fV !== 8 ? 'flash9' : 'flash8')];\r\n\r\n    // if applicable, use _debug versions of SWFs\r\n    sm2.movieURL = (fV === 8 ? 'soundmanager2.swf' : 'soundmanager2_flash9.swf').replace('.swf', isDebug);\r\n\r\n    sm2.features.peakData = sm2.features.waveformData = sm2.features.eqData = (fV > 8);\r\n\r\n  };\r\n\r\n  setPolling = function(bPolling, bHighPerformance) {\r\n\r\n    if (!flash) {\r\n      return;\r\n    }\r\n\r\n    flash._setPolling(bPolling, bHighPerformance);\r\n\r\n  };\r\n\r\n  initDebug = function() {\r\n\r\n    // starts debug mode, creating output <div> for UAs without console object\r\n\r\n    // allow force of debug mode via URL\r\n    // <d>\r\n    if (sm2.debugURLParam.test(wl)) {\r\n      sm2.setupOptions.debugMode = sm2.debugMode = true;\r\n    }\r\n\r\n    if (id(sm2.debugID)) {\r\n      return;\r\n    }\r\n\r\n    var oD, oDebug, oTarget, oToggle, tmp;\r\n\r\n    if (sm2.debugMode && !id(sm2.debugID) && (!hasConsole || !sm2.useConsole || !sm2.consoleOnly)) {\r\n\r\n      oD = doc.createElement('div');\r\n      oD.id = sm2.debugID + '-toggle';\r\n\r\n      oToggle = {\r\n        position: 'fixed',\r\n        bottom: '0px',\r\n        right: '0px',\r\n        width: '1.2em',\r\n        height: '1.2em',\r\n        lineHeight: '1.2em',\r\n        margin: '2px',\r\n        textAlign: 'center',\r\n        border: '1px solid #999',\r\n        cursor: 'pointer',\r\n        background: '#fff',\r\n        color: '#333',\r\n        zIndex: 10001\r\n      };\r\n\r\n      oD.appendChild(doc.createTextNode('-'));\r\n      oD.onclick = toggleDebug;\r\n      oD.title = 'Toggle SM2 debug console';\r\n\r\n      if (ua.match(/msie 6/i)) {\r\n        oD.style.position = 'absolute';\r\n        oD.style.cursor = 'hand';\r\n      }\r\n\r\n      for (tmp in oToggle) {\r\n        if (oToggle.hasOwnProperty(tmp)) {\r\n          oD.style[tmp] = oToggle[tmp];\r\n        }\r\n      }\r\n\r\n      oDebug = doc.createElement('div');\r\n      oDebug.id = sm2.debugID;\r\n      oDebug.style.display = (sm2.debugMode ? 'block' : 'none');\r\n\r\n      if (sm2.debugMode && !id(oD.id)) {\r\n        try {\r\n          oTarget = getDocument();\r\n          oTarget.appendChild(oD);\r\n        } catch(e2) {\r\n          throw new Error(str('domError') + ' \\n' + e2.toString());\r\n        }\r\n        oTarget.appendChild(oDebug);\r\n      }\r\n\r\n    }\r\n\r\n    oTarget = null;\r\n    // </d>\r\n\r\n  };\r\n\r\n  idCheck = this.getSoundById;\r\n\r\n  // <d>\r\n  _wDS = function(o, errorLevel) {\r\n\r\n    return (!o ? '' : sm2._wD(str(o), errorLevel));\r\n\r\n  };\r\n\r\n  toggleDebug = function() {\r\n\r\n    var o = id(sm2.debugID),\r\n    oT = id(sm2.debugID + '-toggle');\r\n\r\n    if (!o) {\r\n      return;\r\n    }\r\n\r\n    if (debugOpen) {\r\n      // minimize\r\n      oT.innerHTML = '+';\r\n      o.style.display = 'none';\r\n    } else {\r\n      oT.innerHTML = '-';\r\n      o.style.display = 'block';\r\n    }\r\n\r\n    debugOpen = !debugOpen;\r\n\r\n  };\r\n\r\n  debugTS = function(sEventType, bSuccess, sMessage) {\r\n\r\n    // troubleshooter debug hooks\r\n\r\n    if (window.sm2Debugger !== _undefined) {\r\n      try {\r\n        sm2Debugger.handleEvent(sEventType, bSuccess, sMessage);\r\n      } catch(e) {\r\n        // oh well\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n\r\n  };\r\n  // </d>\r\n\r\n  getSWFCSS = function() {\r\n\r\n    var css = [];\r\n\r\n    if (sm2.debugMode) {\r\n      css.push(swfCSS.sm2Debug);\r\n    }\r\n\r\n    if (sm2.debugFlash) {\r\n      css.push(swfCSS.flashDebug);\r\n    }\r\n\r\n    if (sm2.useHighPerformance) {\r\n      css.push(swfCSS.highPerf);\r\n    }\r\n\r\n    return css.join(' ');\r\n\r\n  };\r\n\r\n  flashBlockHandler = function() {\r\n\r\n    // *possible* flash block situation.\r\n\r\n    var name = str('fbHandler'),\r\n        p = sm2.getMoviePercent(),\r\n        css = swfCSS,\r\n        error = {\r\n          type: 'FLASHBLOCK'\r\n        };\r\n\r\n    if (sm2.html5Only) {\r\n      // no flash, or unused\r\n      return;\r\n    }\r\n\r\n    if (!sm2.ok()) {\r\n\r\n      if (needsFlash) {\r\n        // make the movie more visible, so user can fix\r\n        sm2.oMC.className = getSWFCSS() + ' ' + css.swfDefault + ' ' + (p === null ? css.swfTimedout : css.swfError);\r\n        sm2._wD(name + ': ' + str('fbTimeout') + (p ? ' (' + str('fbLoaded') + ')' : ''));\r\n      }\r\n\r\n      sm2.didFlashBlock = true;\r\n\r\n      // fire onready(), complain lightly\r\n      processOnEvents({\r\n        type: 'ontimeout',\r\n        ignoreInit: true,\r\n        error: error\r\n      });\r\n\r\n      catchError(error);\r\n\r\n    } else {\r\n\r\n      // SM2 loaded OK (or recovered)\r\n\r\n      // <d>\r\n      if (sm2.didFlashBlock) {\r\n        sm2._wD(name + ': Unblocked');\r\n      }\r\n      // </d>\r\n\r\n      if (sm2.oMC) {\r\n        sm2.oMC.className = [getSWFCSS(), css.swfDefault, css.swfLoaded + (sm2.didFlashBlock ? ' ' + css.swfUnblocked : '')].join(' ');\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n  addOnEvent = function(sType, oMethod, oScope) {\r\n\r\n    if (on_queue[sType] === _undefined) {\r\n      on_queue[sType] = [];\r\n    }\r\n\r\n    on_queue[sType].push({\r\n      method: oMethod,\r\n      scope: (oScope || null),\r\n      fired: false\r\n    });\r\n\r\n  };\r\n\r\n  processOnEvents = function(oOptions) {\r\n\r\n    // if unspecified, assume OK/error\r\n\r\n    if (!oOptions) {\r\n      oOptions = {\r\n        type: (sm2.ok() ? 'onready' : 'ontimeout')\r\n      };\r\n    }\r\n\r\n    // not ready yet.\r\n    if (!didInit && oOptions && !oOptions.ignoreInit) return false;\r\n\r\n    // invalid case\r\n    if (oOptions.type === 'ontimeout' && (sm2.ok() || (disabled && !oOptions.ignoreInit))) return false;\r\n\r\n    var status = {\r\n          success: (oOptions && oOptions.ignoreInit ? sm2.ok() : !disabled)\r\n        },\r\n\r\n        // queue specified by type, or none\r\n        srcQueue = (oOptions && oOptions.type ? on_queue[oOptions.type] || [] : []),\r\n\r\n        queue = [], i, j,\r\n        args = [status],\r\n        canRetry = (needsFlash && !sm2.ok());\r\n\r\n    if (oOptions.error) {\r\n      args[0].error = oOptions.error;\r\n    }\r\n\r\n    for (i = 0, j = srcQueue.length; i < j; i++) {\r\n      if (srcQueue[i].fired !== true) {\r\n        queue.push(srcQueue[i]);\r\n      }\r\n    }\r\n\r\n    if (queue.length) {\r\n\r\n      // sm2._wD(sm + ': Firing ' + queue.length + ' ' + oOptions.type + '() item' + (queue.length === 1 ? '' : 's'));\r\n      for (i = 0, j = queue.length; i < j; i++) {\r\n\r\n        if (queue[i].scope) {\r\n          queue[i].method.apply(queue[i].scope, args);\r\n        } else {\r\n          queue[i].method.apply(this, args);\r\n        }\r\n\r\n        if (!canRetry) {\r\n          // useFlashBlock and SWF timeout case doesn't count here.\r\n          queue[i].fired = true;\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  initUserOnload = function() {\r\n\r\n    window.setTimeout(function() {\r\n\r\n      if (sm2.useFlashBlock) {\r\n        flashBlockHandler();\r\n      }\r\n\r\n      processOnEvents();\r\n\r\n      // call user-defined \"onload\", scoped to window\r\n\r\n      if (typeof sm2.onload === 'function') {\r\n        _wDS('onload', 1);\r\n        sm2.onload.apply(window);\r\n        _wDS('onloadOK', 1);\r\n      }\r\n\r\n      if (sm2.waitForWindowLoad) {\r\n        event.add(window, 'load', initUserOnload);\r\n      }\r\n\r\n    }, 1);\r\n\r\n  };\r\n\r\n  detectFlash = function() {\r\n\r\n    /**\r\n     * Hat tip: Flash Detect library (BSD, (C) 2007) by Carl \"DocYes\" S. Yestrau\r\n     * http://featureblend.com/javascript-flash-detection-library.html / http://featureblend.com/license.txt\r\n     */\r\n\r\n    // this work has already been done.\r\n    if (hasFlash !== _undefined) return hasFlash;\r\n\r\n    var hasPlugin = false, n = navigator, obj, type, types, AX = window.ActiveXObject;\r\n\r\n    // MS Edge 14 throws an \"Unspecified Error\" because n.plugins is inaccessible due to permissions\r\n    var nP;\r\n\r\n    try {\r\n      nP = n.plugins;\r\n    } catch(e) {\r\n      nP = undefined;\r\n    }\r\n\r\n    if (nP && nP.length) {\r\n\r\n      type = 'application/x-shockwave-flash';\r\n      types = n.mimeTypes;\r\n\r\n      if (types && types[type] && types[type].enabledPlugin && types[type].enabledPlugin.description) {\r\n        hasPlugin = true;\r\n      }\r\n\r\n    } else if (AX !== _undefined && !ua.match(/MSAppHost/i)) {\r\n\r\n      // Windows 8 Store Apps (MSAppHost) are weird (compatibility?) and won't complain here, but will barf if Flash/ActiveX object is appended to the DOM.\r\n      try {\r\n        obj = new AX('ShockwaveFlash.ShockwaveFlash');\r\n      } catch(e) {\r\n        // oh well\r\n        obj = null;\r\n      }\r\n\r\n      hasPlugin = (!!obj);\r\n\r\n      // cleanup, because it is ActiveX after all\r\n      obj = null;\r\n\r\n    }\r\n\r\n    hasFlash = hasPlugin;\r\n\r\n    return hasPlugin;\r\n\r\n  };\r\n\r\n  featureCheck = function() {\r\n\r\n    var flashNeeded,\r\n        item,\r\n        formats = sm2.audioFormats,\r\n        // iPhone <= 3.1 has broken HTML5 audio(), but firmware 3.2 (original iPad) + iOS4 works.\r\n        isSpecial = (is_iDevice && !!(ua.match(/os (1|2|3_0|3_1)\\s/i)));\r\n\r\n    if (isSpecial) {\r\n\r\n      // has Audio(), but is broken; let it load links directly.\r\n      sm2.hasHTML5 = false;\r\n\r\n      // ignore flash case, however\r\n      sm2.html5Only = true;\r\n\r\n      // hide the SWF, if present\r\n      if (sm2.oMC) {\r\n        sm2.oMC.style.display = 'none';\r\n      }\r\n\r\n    } else if (sm2.useHTML5Audio) {\r\n\r\n        if (!sm2.html5 || !sm2.html5.canPlayType) {\r\n          sm2._wD('SoundManager: No HTML5 Audio() support detected.');\r\n          sm2.hasHTML5 = false;\r\n        }\r\n\r\n        // <d>\r\n        if (isBadSafari) {\r\n          sm2._wD(smc + 'Note: Buggy HTML5 Audio in Safari on this OS X release, see https://bugs.webkit.org/show_bug.cgi?id=32159 - ' + (!hasFlash ? ' would use flash fallback for MP3/MP4, but none detected.' : 'will use flash fallback for MP3/MP4, if available'), 1);\r\n        }\r\n        // </d>\r\n\r\n      }\r\n\r\n    if (sm2.useHTML5Audio && sm2.hasHTML5) {\r\n\r\n      // sort out whether flash is optional, required or can be ignored.\r\n\r\n      // innocent until proven guilty.\r\n      canIgnoreFlash = true;\r\n\r\n      for (item in formats) {\r\n\r\n        if (formats.hasOwnProperty(item)) {\r\n\r\n          if (formats[item].required) {\r\n\r\n            if (!sm2.html5.canPlayType(formats[item].type)) {\r\n\r\n              // 100% HTML5 mode is not possible.\r\n              canIgnoreFlash = false;\r\n              flashNeeded = true;\r\n\r\n            } else if (sm2.preferFlash && (sm2.flash[item] || sm2.flash[formats[item].type])) {\r\n\r\n              // flash may be required, or preferred for this format.\r\n              flashNeeded = true;\r\n\r\n            }\r\n\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // sanity check...\r\n    if (sm2.ignoreFlash) {\r\n      flashNeeded = false;\r\n      canIgnoreFlash = true;\r\n    }\r\n\r\n    sm2.html5Only = (sm2.hasHTML5 && sm2.useHTML5Audio && !flashNeeded);\r\n\r\n    return (!sm2.html5Only);\r\n\r\n  };\r\n\r\n  parseURL = function(url) {\r\n\r\n    /**\r\n     * Internal: Finds and returns the first playable URL (or failing that, the first URL.)\r\n     * @param {string or array} url A single URL string, OR, an array of URL strings or {url:'/path/to/resource', type:'audio/mp3'} objects.\r\n     */\r\n\r\n    var i, j, urlResult = 0, result;\r\n\r\n    if (url instanceof Array) {\r\n\r\n      // find the first good one\r\n      for (i = 0, j = url.length; i < j; i++) {\r\n\r\n        if (url[i] instanceof Object) {\r\n\r\n          // MIME check\r\n          if (sm2.canPlayMIME(url[i].type)) {\r\n            urlResult = i;\r\n            break;\r\n          }\r\n\r\n        } else if (sm2.canPlayURL(url[i])) {\r\n\r\n          // URL string check\r\n          urlResult = i;\r\n          break;\r\n\r\n        }\r\n\r\n      }\r\n\r\n      // normalize to string\r\n      if (url[urlResult].url) {\r\n        url[urlResult] = url[urlResult].url;\r\n      }\r\n\r\n      result = url[urlResult];\r\n\r\n    } else {\r\n\r\n      // single URL case\r\n      result = url;\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n\r\n  startTimer = function(oSound) {\r\n\r\n    /**\r\n     * attach a timer to this sound, and start an interval if needed\r\n     */\r\n\r\n    if (!oSound._hasTimer) {\r\n\r\n      oSound._hasTimer = true;\r\n\r\n      if (!mobileHTML5 && sm2.html5PollingInterval) {\r\n\r\n        if (h5IntervalTimer === null && h5TimerCount === 0) {\r\n\r\n          h5IntervalTimer = setInterval(timerExecute, sm2.html5PollingInterval);\r\n\r\n        }\r\n\r\n        h5TimerCount++;\r\n\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n  stopTimer = function(oSound) {\r\n\r\n    /**\r\n     * detach a timer\r\n     */\r\n\r\n    if (oSound._hasTimer) {\r\n\r\n      oSound._hasTimer = false;\r\n\r\n      if (!mobileHTML5 && sm2.html5PollingInterval) {\r\n\r\n        // interval will stop itself at next execution.\r\n\r\n        h5TimerCount--;\r\n\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n  timerExecute = function() {\r\n\r\n    /**\r\n     * manual polling for HTML5 progress events, ie., whileplaying()\r\n     * (can achieve greater precision than conservative default HTML5 interval)\r\n     */\r\n\r\n    var i;\r\n\r\n    if (h5IntervalTimer !== null && !h5TimerCount) {\r\n\r\n      // no active timers, stop polling interval.\r\n\r\n      clearInterval(h5IntervalTimer);\r\n\r\n      h5IntervalTimer = null;\r\n\r\n      return;\r\n\r\n    }\r\n\r\n    // check all HTML5 sounds with timers\r\n\r\n    for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n\r\n      if (sm2.sounds[sm2.soundIDs[i]].isHTML5 && sm2.sounds[sm2.soundIDs[i]]._hasTimer) {\r\n        sm2.sounds[sm2.soundIDs[i]]._onTimer();\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n  catchError = function(options) {\r\n\r\n    options = (options !== _undefined ? options : {});\r\n\r\n    if (typeof sm2.onerror === 'function') {\r\n      sm2.onerror.apply(window, [{\r\n        type: (options.type !== _undefined ? options.type : null)\r\n      }]);\r\n    }\r\n\r\n    if (options.fatal !== _undefined && options.fatal) {\r\n      sm2.disable();\r\n    }\r\n\r\n  };\r\n\r\n  badSafariFix = function() {\r\n\r\n    // special case: \"bad\" Safari (OS X 10.3 - 10.7) must fall back to flash for MP3/MP4\r\n    if (!isBadSafari || !detectFlash()) {\r\n      // doesn't apply\r\n      return;\r\n    }\r\n\r\n    var aF = sm2.audioFormats, i, item;\r\n\r\n    for (item in aF) {\r\n\r\n      if (aF.hasOwnProperty(item)) {\r\n\r\n        if (item === 'mp3' || item === 'mp4') {\r\n\r\n          sm2._wD(sm + ': Using flash fallback for ' + item + ' format');\r\n          sm2.html5[item] = false;\r\n\r\n          // assign result to related formats, too\r\n          if (aF[item] && aF[item].related) {\r\n            for (i = aF[item].related.length - 1; i >= 0; i--) {\r\n              sm2.html5[aF[item].related[i]] = false;\r\n            }\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n  /**\r\n   * Pseudo-private flash/ExternalInterface methods\r\n   * ----------------------------------------------\r\n   */\r\n\r\n  this._setSandboxType = function(sandboxType) {\r\n\r\n    // <d>\r\n    // Security sandbox according to Flash plugin\r\n    var sb = sm2.sandbox;\r\n\r\n    sb.type = sandboxType;\r\n    sb.description = sb.types[(sb.types[sandboxType] !== _undefined ? sandboxType : 'unknown')];\r\n\r\n    if (sb.type === 'localWithFile') {\r\n\r\n      sb.noRemote = true;\r\n      sb.noLocal = false;\r\n      _wDS('secNote', 2);\r\n\r\n    } else if (sb.type === 'localWithNetwork') {\r\n\r\n      sb.noRemote = false;\r\n      sb.noLocal = true;\r\n\r\n    } else if (sb.type === 'localTrusted') {\r\n\r\n      sb.noRemote = false;\r\n      sb.noLocal = false;\r\n\r\n    }\r\n    // </d>\r\n\r\n  };\r\n\r\n  this._externalInterfaceOK = function(swfVersion) {\r\n\r\n    // flash callback confirming flash loaded, EI working etc.\r\n    // swfVersion: SWF build string\r\n\r\n    if (sm2.swfLoaded) {\r\n      return;\r\n    }\r\n\r\n    var e;\r\n\r\n    debugTS('swf', true);\r\n    debugTS('flashtojs', true);\r\n    sm2.swfLoaded = true;\r\n    tryInitOnFocus = false;\r\n\r\n    if (isBadSafari) {\r\n      badSafariFix();\r\n    }\r\n\r\n    // complain if JS + SWF build/version strings don't match, excluding +DEV builds\r\n    // <d>\r\n    if (!swfVersion || swfVersion.replace(/\\+dev/i, '') !== sm2.versionNumber.replace(/\\+dev/i, '')) {\r\n\r\n      e = sm + ': Fatal: JavaScript file build \"' + sm2.versionNumber + '\" does not match Flash SWF build \"' + swfVersion + '\" at ' + sm2.url + '. Ensure both are up-to-date.';\r\n\r\n      // escape flash -> JS stack so this error fires in window.\r\n      setTimeout(function() {\r\n        throw new Error(e);\r\n      }, 0);\r\n\r\n      // exit, init will fail with timeout\r\n      return;\r\n\r\n    }\r\n    // </d>\r\n\r\n    // IE needs a larger timeout\r\n    setTimeout(init, isIE ? 100 : 1);\r\n\r\n  };\r\n\r\n  /**\r\n   * Private initialization helpers\r\n   * ------------------------------\r\n   */\r\n\r\n  createMovie = function(movieID, movieURL) {\r\n\r\n    // ignore if already connected\r\n    if (didAppend && appendSuccess) return false;\r\n\r\n    function initMsg() {\r\n\r\n      // <d>\r\n\r\n      var options = [],\r\n          title,\r\n          msg = [],\r\n          delimiter = ' + ';\r\n\r\n      title = 'SoundManager ' + sm2.version + (!sm2.html5Only && sm2.useHTML5Audio ? (sm2.hasHTML5 ? ' + HTML5 audio' : ', no HTML5 audio support') : '');\r\n\r\n      if (!sm2.html5Only) {\r\n\r\n        if (sm2.preferFlash) {\r\n          options.push('preferFlash');\r\n        }\r\n\r\n        if (sm2.useHighPerformance) {\r\n          options.push('useHighPerformance');\r\n        }\r\n\r\n        if (sm2.flashPollingInterval) {\r\n          options.push('flashPollingInterval (' + sm2.flashPollingInterval + 'ms)');\r\n        }\r\n\r\n        if (sm2.html5PollingInterval) {\r\n          options.push('html5PollingInterval (' + sm2.html5PollingInterval + 'ms)');\r\n        }\r\n\r\n        if (sm2.wmode) {\r\n          options.push('wmode (' + sm2.wmode + ')');\r\n        }\r\n\r\n        if (sm2.debugFlash) {\r\n          options.push('debugFlash');\r\n        }\r\n\r\n        if (sm2.useFlashBlock) {\r\n          options.push('flashBlock');\r\n        }\r\n\r\n      } else if (sm2.html5PollingInterval) {\r\n          options.push('html5PollingInterval (' + sm2.html5PollingInterval + 'ms)');\r\n        }\r\n\r\n      if (options.length) {\r\n        msg = msg.concat([options.join(delimiter)]);\r\n      }\r\n\r\n      sm2._wD(title + (msg.length ? delimiter + msg.join(', ') : ''), 1);\r\n\r\n      showSupport();\r\n\r\n      // </d>\r\n\r\n    }\r\n\r\n    if (sm2.html5Only) {\r\n\r\n      // 100% HTML5 mode\r\n      setVersionInfo();\r\n\r\n      initMsg();\r\n      sm2.oMC = id(sm2.movieID);\r\n      init();\r\n\r\n      // prevent multiple init attempts\r\n      didAppend = true;\r\n\r\n      appendSuccess = true;\r\n\r\n      return false;\r\n\r\n    }\r\n\r\n    // flash path\r\n    var remoteURL = (movieURL || sm2.url),\r\n    localURL = (sm2.altURL || remoteURL),\r\n    swfTitle = 'JS/Flash audio component (SoundManager 2)',\r\n    oTarget = getDocument(),\r\n    extraClass = getSWFCSS(),\r\n    isRTL = null,\r\n    html = doc.getElementsByTagName('html')[0],\r\n    oEmbed, oMovie, tmp, movieHTML, oEl, s, x, sClass;\r\n\r\n    isRTL = (html && html.dir && html.dir.match(/rtl/i));\r\n    movieID = (movieID === _undefined ? sm2.id : movieID);\r\n\r\n    function param(name, value) {\r\n      return '<param name=\"' + name + '\" value=\"' + value + '\" />';\r\n    }\r\n\r\n    // safety check for legacy (change to Flash 9 URL)\r\n    setVersionInfo();\r\n    sm2.url = normalizeMovieURL(overHTTP ? remoteURL : localURL);\r\n    movieURL = sm2.url;\r\n\r\n    sm2.wmode = (!sm2.wmode && sm2.useHighPerformance ? 'transparent' : sm2.wmode);\r\n\r\n    if (sm2.wmode !== null && (ua.match(/msie 8/i) || (!isIE && !sm2.useHighPerformance)) && navigator.platform.match(/win32|win64/i)) {\r\n      /**\r\n       * extra-special case: movie doesn't load until scrolled into view when using wmode = anything but 'window' here\r\n       * does not apply when using high performance (position:fixed means on-screen), OR infinite flash load timeout\r\n       * wmode breaks IE 8 on Vista + Win7 too in some cases, as of January 2011 (?)\r\n       */\r\n      messages.push(strings.spcWmode);\r\n      sm2.wmode = null;\r\n    }\r\n\r\n    oEmbed = {\r\n      name: movieID,\r\n      id: movieID,\r\n      src: movieURL,\r\n      quality: 'high',\r\n      allowScriptAccess: sm2.allowScriptAccess,\r\n      bgcolor: sm2.bgColor,\r\n      pluginspage: http + 'www.macromedia.com/go/getflashplayer',\r\n      title: swfTitle,\r\n      type: 'application/x-shockwave-flash',\r\n      wmode: sm2.wmode,\r\n      // http://help.adobe.com/en_US/as3/mobile/WS4bebcd66a74275c36cfb8137124318eebc6-7ffd.html\r\n      hasPriority: 'true'\r\n    };\r\n\r\n    if (sm2.debugFlash) {\r\n      oEmbed.FlashVars = 'debug=1';\r\n    }\r\n\r\n    if (!sm2.wmode) {\r\n      // don't write empty attribute\r\n      delete oEmbed.wmode;\r\n    }\r\n\r\n    if (isIE) {\r\n\r\n      // IE is \"special\".\r\n      oMovie = doc.createElement('div');\r\n      movieHTML = [\r\n        '<object id=\"' + movieID + '\" data=\"' + movieURL + '\" type=\"' + oEmbed.type + '\" title=\"' + oEmbed.title + '\" classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\">',\r\n        param('movie', movieURL),\r\n        param('AllowScriptAccess', sm2.allowScriptAccess),\r\n        param('quality', oEmbed.quality),\r\n        (sm2.wmode ? param('wmode', sm2.wmode) : ''),\r\n        param('bgcolor', sm2.bgColor),\r\n        param('hasPriority', 'true'),\r\n        (sm2.debugFlash ? param('FlashVars', oEmbed.FlashVars) : ''),\r\n        '</object>'\r\n      ].join('');\r\n\r\n    } else {\r\n\r\n      oMovie = doc.createElement('embed');\r\n      for (tmp in oEmbed) {\r\n        if (oEmbed.hasOwnProperty(tmp)) {\r\n          oMovie.setAttribute(tmp, oEmbed[tmp]);\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    initDebug();\r\n    extraClass = getSWFCSS();\r\n    oTarget = getDocument();\r\n\r\n    if (oTarget) {\r\n\r\n      sm2.oMC = (id(sm2.movieID) || doc.createElement('div'));\r\n\r\n      if (!sm2.oMC.id) {\r\n\r\n        sm2.oMC.id = sm2.movieID;\r\n        sm2.oMC.className = swfCSS.swfDefault + ' ' + extraClass;\r\n        s = null;\r\n        oEl = null;\r\n\r\n        if (!sm2.useFlashBlock) {\r\n          if (sm2.useHighPerformance) {\r\n            // on-screen at all times\r\n            s = {\r\n              position: 'fixed',\r\n              width: '8px',\r\n              height: '8px',\r\n              // >= 6px for flash to run fast, >= 8px to start up under Firefox/win32 in some cases. odd? yes.\r\n              bottom: '0px',\r\n              left: '0px',\r\n              overflow: 'hidden'\r\n            };\r\n          } else {\r\n            // hide off-screen, lower priority\r\n            s = {\r\n              position: 'absolute',\r\n              width: '6px',\r\n              height: '6px',\r\n              top: '-9999px',\r\n              left: '-9999px'\r\n            };\r\n            if (isRTL) {\r\n              s.left = Math.abs(parseInt(s.left, 10)) + 'px';\r\n            }\r\n          }\r\n        }\r\n\r\n        if (isWebkit) {\r\n          // soundcloud-reported render/crash fix, safari 5\r\n          sm2.oMC.style.zIndex = 10000;\r\n        }\r\n\r\n        if (!sm2.debugFlash) {\r\n          for (x in s) {\r\n            if (s.hasOwnProperty(x)) {\r\n              sm2.oMC.style[x] = s[x];\r\n            }\r\n          }\r\n        }\r\n\r\n        try {\r\n\r\n          if (!isIE) {\r\n            sm2.oMC.appendChild(oMovie);\r\n          }\r\n\r\n          oTarget.appendChild(sm2.oMC);\r\n\r\n          if (isIE) {\r\n            oEl = sm2.oMC.appendChild(doc.createElement('div'));\r\n            oEl.className = swfCSS.swfBox;\r\n            oEl.innerHTML = movieHTML;\r\n          }\r\n\r\n          appendSuccess = true;\r\n\r\n        } catch(e) {\r\n\r\n          throw new Error(str('domError') + ' \\n' + e.toString());\r\n\r\n        }\r\n\r\n      } else {\r\n\r\n        // SM2 container is already in the document (eg. flashblock use case)\r\n        sClass = sm2.oMC.className;\r\n        sm2.oMC.className = (sClass ? sClass + ' ' : swfCSS.swfDefault) + (extraClass ? ' ' + extraClass : '');\r\n        sm2.oMC.appendChild(oMovie);\r\n\r\n        if (isIE) {\r\n          oEl = sm2.oMC.appendChild(doc.createElement('div'));\r\n          oEl.className = swfCSS.swfBox;\r\n          oEl.innerHTML = movieHTML;\r\n        }\r\n\r\n        appendSuccess = true;\r\n\r\n      }\r\n\r\n    }\r\n\r\n    didAppend = true;\r\n\r\n    initMsg();\r\n\r\n    // sm2._wD(sm + ': Trying to load ' + movieURL + (!overHTTP && sm2.altURL ? ' (alternate URL)' : ''), 1);\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  initMovie = function() {\r\n\r\n    if (sm2.html5Only) {\r\n      createMovie();\r\n      return false;\r\n    }\r\n\r\n    // attempt to get, or create, movie (may already exist)\r\n    if (flash) return false;\r\n\r\n    if (!sm2.url) {\r\n\r\n      /**\r\n       * Something isn't right - we've reached init, but the soundManager url property has not been set.\r\n       * User has not called setup({url: ...}), or has not set soundManager.url (legacy use case) directly before init time.\r\n       * Notify and exit. If user calls setup() with a url: property, init will be restarted as in the deferred loading case.\r\n       */\r\n\r\n       _wDS('noURL');\r\n       return false;\r\n\r\n    }\r\n\r\n    // inline markup case\r\n    flash = sm2.getMovie(sm2.id);\r\n\r\n    if (!flash) {\r\n\r\n      if (!oRemoved) {\r\n\r\n        // try to create\r\n        createMovie(sm2.id, sm2.url);\r\n\r\n      } else {\r\n\r\n        // try to re-append removed movie after reboot()\r\n        if (!isIE) {\r\n          sm2.oMC.appendChild(oRemoved);\r\n        } else {\r\n          sm2.oMC.innerHTML = oRemovedHTML;\r\n        }\r\n\r\n        oRemoved = null;\r\n        didAppend = true;\r\n\r\n      }\r\n\r\n      flash = sm2.getMovie(sm2.id);\r\n\r\n    }\r\n\r\n    if (typeof sm2.oninitmovie === 'function') {\r\n      setTimeout(sm2.oninitmovie, 1);\r\n    }\r\n\r\n    // <d>\r\n    flushMessages();\r\n    // </d>\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  delayWaitForEI = function() {\r\n\r\n    setTimeout(waitForEI, 1000);\r\n\r\n  };\r\n\r\n  rebootIntoHTML5 = function() {\r\n\r\n    // special case: try for a reboot with preferFlash: false, if 100% HTML5 mode is possible and useFlashBlock is not enabled.\r\n\r\n    window.setTimeout(function() {\r\n\r\n      complain(smc + 'useFlashBlock is false, 100% HTML5 mode is possible. Rebooting with preferFlash: false...');\r\n\r\n      sm2.setup({\r\n        preferFlash: false\r\n      }).reboot();\r\n\r\n      // if for some reason you want to detect this case, use an ontimeout() callback and look for html5Only and didFlashBlock == true.\r\n      sm2.didFlashBlock = true;\r\n\r\n      sm2.beginDelayedInit();\r\n\r\n    }, 1);\r\n\r\n  };\r\n\r\n  waitForEI = function() {\r\n\r\n    var p,\r\n        loadIncomplete = false;\r\n\r\n    if (!sm2.url) {\r\n      // No SWF url to load (noURL case) - exit for now. Will be retried when url is set.\r\n      return;\r\n    }\r\n\r\n    if (waitingForEI) {\r\n      return;\r\n    }\r\n\r\n    waitingForEI = true;\r\n    event.remove(window, 'load', delayWaitForEI);\r\n\r\n    if (hasFlash && tryInitOnFocus && !isFocused) {\r\n      // Safari won't load flash in background tabs, only when focused.\r\n      _wDS('waitFocus');\r\n      return;\r\n    }\r\n\r\n    if (!didInit) {\r\n      p = sm2.getMoviePercent();\r\n      if (p > 0 && p < 100) {\r\n        loadIncomplete = true;\r\n      }\r\n    }\r\n\r\n    setTimeout(function() {\r\n\r\n      p = sm2.getMoviePercent();\r\n\r\n      if (loadIncomplete) {\r\n        // special case: if movie *partially* loaded, retry until it's 100% before assuming failure.\r\n        waitingForEI = false;\r\n        sm2._wD(str('waitSWF'));\r\n        window.setTimeout(delayWaitForEI, 1);\r\n        return;\r\n      }\r\n\r\n      // <d>\r\n      if (!didInit) {\r\n\r\n        sm2._wD(sm + ': No Flash response within expected time. Likely causes: ' + (p === 0 ? 'SWF load failed, ' : '') + 'Flash blocked or JS-Flash security error.' + (sm2.debugFlash ? ' ' + str('checkSWF') : ''), 2);\r\n\r\n        if (!overHTTP && p) {\r\n\r\n          _wDS('localFail', 2);\r\n\r\n          if (!sm2.debugFlash) {\r\n            _wDS('tryDebug', 2);\r\n          }\r\n\r\n        }\r\n\r\n        if (p === 0) {\r\n\r\n          // if 0 (not null), probably a 404.\r\n          sm2._wD(str('swf404', sm2.url), 1);\r\n\r\n        }\r\n\r\n        debugTS('flashtojs', false, ': Timed out' + (overHTTP ? ' (Check flash security or flash blockers)' : ' (No plugin/missing SWF?)'));\r\n\r\n      }\r\n      // </d>\r\n\r\n      // give up / time-out, depending\r\n\r\n      if (!didInit && okToDisable) {\r\n\r\n        if (p === null) {\r\n\r\n          // SWF failed to report load progress. Possibly blocked.\r\n\r\n          if (sm2.useFlashBlock || sm2.flashLoadTimeout === 0) {\r\n\r\n            if (sm2.useFlashBlock) {\r\n\r\n              flashBlockHandler();\r\n\r\n            }\r\n\r\n            _wDS('waitForever');\r\n\r\n          } else if (!sm2.useFlashBlock && canIgnoreFlash) {\r\n\r\n            // no custom flash block handling, but SWF has timed out. Will recover if user unblocks / allows SWF load.\r\n            rebootIntoHTML5();\r\n\r\n          } else {\r\n\r\n            _wDS('waitForever');\r\n\r\n            // fire any regular registered ontimeout() listeners.\r\n            processOnEvents({\r\n              type: 'ontimeout',\r\n              ignoreInit: true,\r\n              error: {\r\n                type: 'INIT_FLASHBLOCK'\r\n              }\r\n            });\r\n\r\n          }\r\n\r\n        } else if (sm2.flashLoadTimeout === 0) {\r\n\r\n          // SWF loaded? Shouldn't be a blocking issue, then.\r\n\r\n          _wDS('waitForever');\r\n\r\n        } else if (!sm2.useFlashBlock && canIgnoreFlash) {\r\n\r\n          rebootIntoHTML5();\r\n\r\n        } else {\r\n\r\n          failSafely(true);\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }, sm2.flashLoadTimeout);\r\n\r\n  };\r\n\r\n  handleFocus = function() {\r\n\r\n    function cleanup() {\r\n      event.remove(window, 'focus', handleFocus);\r\n    }\r\n\r\n    if (isFocused || !tryInitOnFocus) {\r\n      // already focused, or not special Safari background tab case\r\n      cleanup();\r\n      return true;\r\n    }\r\n\r\n    okToDisable = true;\r\n    isFocused = true;\r\n    _wDS('gotFocus');\r\n\r\n    // allow init to restart\r\n    waitingForEI = false;\r\n\r\n    // kick off ExternalInterface timeout, now that the SWF has started\r\n    delayWaitForEI();\r\n\r\n    cleanup();\r\n    return true;\r\n\r\n  };\r\n\r\n  flushMessages = function() {\r\n\r\n    // <d>\r\n\r\n    // SM2 pre-init debug messages\r\n    if (messages.length) {\r\n      sm2._wD('SoundManager 2: ' + messages.join(' '), 1);\r\n      messages = [];\r\n    }\r\n\r\n    // </d>\r\n\r\n  };\r\n\r\n  showSupport = function() {\r\n\r\n    // <d>\r\n\r\n    flushMessages();\r\n\r\n    var item, tests = [];\r\n\r\n    if (sm2.useHTML5Audio && sm2.hasHTML5) {\r\n      for (item in sm2.audioFormats) {\r\n        if (sm2.audioFormats.hasOwnProperty(item)) {\r\n          tests.push(item + ' = ' + sm2.html5[item] + (!sm2.html5[item] && needsFlash && sm2.flash[item] ? ' (using flash)' : (sm2.preferFlash && sm2.flash[item] && needsFlash ? ' (preferring flash)' : (!sm2.html5[item] ? ' (' + (sm2.audioFormats[item].required ? 'required, ' : '') + 'and no flash support)' : ''))));\r\n        }\r\n      }\r\n      sm2._wD('SoundManager 2 HTML5 support: ' + tests.join(', '), 1);\r\n    }\r\n\r\n    // </d>\r\n\r\n  };\r\n\r\n  initComplete = function(bNoDisable) {\r\n\r\n    if (didInit) return false;\r\n\r\n    if (sm2.html5Only) {\r\n      // all good.\r\n      _wDS('sm2Loaded', 1);\r\n      didInit = true;\r\n      initUserOnload();\r\n      debugTS('onload', true);\r\n      return true;\r\n    }\r\n\r\n    var wasTimeout = (sm2.useFlashBlock && sm2.flashLoadTimeout && !sm2.getMoviePercent()),\r\n        result = true,\r\n        error;\r\n\r\n    if (!wasTimeout) {\r\n      didInit = true;\r\n    }\r\n\r\n    error = {\r\n      type: (!hasFlash && needsFlash ? 'NO_FLASH' : 'INIT_TIMEOUT')\r\n    };\r\n\r\n    sm2._wD('SoundManager 2 ' + (disabled ? 'failed to load' : 'loaded') + ' (' + (disabled ? 'Flash security/load error' : 'OK') + ') ' + String.fromCharCode(disabled ? 10006 : 10003), disabled ? 2 : 1);\r\n\r\n    if (disabled || bNoDisable) {\r\n\r\n      if (sm2.useFlashBlock && sm2.oMC) {\r\n        sm2.oMC.className = getSWFCSS() + ' ' + (sm2.getMoviePercent() === null ? swfCSS.swfTimedout : swfCSS.swfError);\r\n      }\r\n\r\n      processOnEvents({\r\n        type: 'ontimeout',\r\n        error: error,\r\n        ignoreInit: true\r\n      });\r\n\r\n      debugTS('onload', false);\r\n      catchError(error);\r\n\r\n      result = false;\r\n\r\n    } else {\r\n\r\n      debugTS('onload', true);\r\n\r\n    }\r\n\r\n    if (!disabled) {\r\n\r\n      if (sm2.waitForWindowLoad && !windowLoaded) {\r\n\r\n        _wDS('waitOnload');\r\n        event.add(window, 'load', initUserOnload);\r\n\r\n      } else {\r\n\r\n        // <d>\r\n        if (sm2.waitForWindowLoad && windowLoaded) {\r\n          _wDS('docLoaded');\r\n        }\r\n        // </d>\r\n\r\n        initUserOnload();\r\n\r\n      }\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  /**\r\n   * apply top-level setupOptions object as local properties, eg., this.setupOptions.flashVersion -> this.flashVersion (soundManager.flashVersion)\r\n   * this maintains backward compatibility, and allows properties to be defined separately for use by soundManager.setup().\r\n   */\r\n\r\n  setProperties = function() {\r\n\r\n    var i,\r\n        o = sm2.setupOptions;\r\n\r\n    for (i in o) {\r\n\r\n      if (o.hasOwnProperty(i)) {\r\n\r\n        // assign local property if not already defined\r\n\r\n        if (sm2[i] === _undefined) {\r\n\r\n          sm2[i] = o[i];\r\n\r\n        } else if (sm2[i] !== o[i]) {\r\n\r\n          // legacy support: write manually-assigned property (eg., soundManager.url) back to setupOptions to keep things in sync\r\n          sm2.setupOptions[i] = sm2[i];\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n\r\n  init = function() {\r\n\r\n    // called after onload()\r\n\r\n    if (didInit) {\r\n      _wDS('didInit');\r\n      return false;\r\n    }\r\n\r\n    function cleanup() {\r\n      event.remove(window, 'load', sm2.beginDelayedInit);\r\n    }\r\n\r\n    if (sm2.html5Only) {\r\n\r\n      if (!didInit) {\r\n        // we don't need no steenking flash!\r\n        cleanup();\r\n        sm2.enabled = true;\r\n        initComplete();\r\n      }\r\n\r\n      return true;\r\n\r\n    }\r\n\r\n    // flash path\r\n    initMovie();\r\n\r\n    try {\r\n\r\n      // attempt to talk to Flash\r\n      flash._externalInterfaceTest(false);\r\n\r\n      /**\r\n       * Apply user-specified polling interval, OR, if \"high performance\" set, faster vs. default polling\r\n       * (determines frequency of whileloading/whileplaying callbacks, effectively driving UI framerates)\r\n       */\r\n      setPolling(true, (sm2.flashPollingInterval || (sm2.useHighPerformance ? 10 : 50)));\r\n\r\n      if (!sm2.debugMode) {\r\n        // stop the SWF from making debug output calls to JS\r\n        flash._disableDebug();\r\n      }\r\n\r\n      sm2.enabled = true;\r\n      debugTS('jstoflash', true);\r\n\r\n      if (!sm2.html5Only) {\r\n        // prevent browser from showing cached page state (or rather, restoring \"suspended\" page state) via back button, because flash may be dead\r\n        // http://www.webkit.org/blog/516/webkit-page-cache-ii-the-unload-event/\r\n        event.add(window, 'unload', doNothing);\r\n      }\r\n\r\n    } catch(e) {\r\n\r\n      sm2._wD('js/flash exception: ' + e.toString());\r\n\r\n      debugTS('jstoflash', false);\r\n\r\n      catchError({\r\n        type: 'JS_TO_FLASH_EXCEPTION',\r\n        fatal: true\r\n      });\r\n\r\n      // don't disable, for reboot()\r\n      failSafely(true);\r\n\r\n      initComplete();\r\n\r\n      return false;\r\n\r\n    }\r\n\r\n    initComplete();\r\n\r\n    // disconnect events\r\n    cleanup();\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  domContentLoaded = function() {\r\n\r\n    if (didDCLoaded) return false;\r\n\r\n    didDCLoaded = true;\r\n\r\n    // assign top-level soundManager properties eg. soundManager.url\r\n    setProperties();\r\n\r\n    initDebug();\r\n\r\n    if (!hasFlash && sm2.hasHTML5) {\r\n\r\n      sm2._wD('SoundManager 2: No Flash detected' + (!sm2.useHTML5Audio ? ', enabling HTML5.' : '. Trying HTML5-only mode.'), 1);\r\n\r\n      sm2.setup({\r\n        useHTML5Audio: true,\r\n        // make sure we aren't preferring flash, either\r\n        // TODO: preferFlash should not matter if flash is not installed. Currently, stuff breaks without the below tweak.\r\n        preferFlash: false\r\n      });\r\n\r\n    }\r\n\r\n    testHTML5();\r\n\r\n    if (!hasFlash && needsFlash) {\r\n\r\n      messages.push(strings.needFlash);\r\n\r\n      // TODO: Fatal here vs. timeout approach, etc.\r\n      // hack: fail sooner.\r\n      sm2.setup({\r\n        flashLoadTimeout: 1\r\n      });\r\n\r\n    }\r\n\r\n    if (doc.removeEventListener) {\r\n      doc.removeEventListener('DOMContentLoaded', domContentLoaded, false);\r\n    }\r\n\r\n    initMovie();\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  domContentLoadedIE = function() {\r\n\r\n    if (doc.readyState === 'complete') {\r\n      domContentLoaded();\r\n      doc.detachEvent('onreadystatechange', domContentLoadedIE);\r\n    }\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  winOnLoad = function() {\r\n\r\n    // catch edge case of initComplete() firing after window.load()\r\n    windowLoaded = true;\r\n\r\n    // catch case where DOMContentLoaded has been sent, but we're still in doc.readyState = 'interactive'\r\n    domContentLoaded();\r\n\r\n    event.remove(window, 'load', winOnLoad);\r\n\r\n  };\r\n\r\n  // sniff up-front\r\n  detectFlash();\r\n\r\n  // focus and window load, init (primarily flash-driven)\r\n  event.add(window, 'focus', handleFocus);\r\n  event.add(window, 'load', delayWaitForEI);\r\n  event.add(window, 'load', winOnLoad);\r\n\r\n  if (doc.addEventListener) {\r\n\r\n    doc.addEventListener('DOMContentLoaded', domContentLoaded, false);\r\n\r\n  } else if (doc.attachEvent) {\r\n\r\n    doc.attachEvent('onreadystatechange', domContentLoadedIE);\r\n\r\n  } else {\r\n\r\n    // no add/attachevent support - safe to assume no JS -> Flash either\r\n    debugTS('onload', false);\r\n    catchError({\r\n      type: 'NO_DOM2_EVENTS',\r\n      fatal: true\r\n    });\r\n\r\n  }\r\n\r\n} // SoundManager()\r\n\r\n// SM2_DEFER details: http://www.schillmania.com/projects/soundmanager2/doc/getstarted/#lazy-loading\r\n\r\nif (window.SM2_DEFER === _undefined || !SM2_DEFER) {\r\n  soundManager = new SoundManager();\r\n}\r\n\r\n/**\r\n * SoundManager public interfaces\r\n * ------------------------------\r\n */\r\n\r\nif (typeof module === 'object' && module && typeof module.exports === 'object') {\r\n\r\n  /**\r\n   * commonJS module\r\n   */\r\n\r\n  module.exports.SoundManager = SoundManager;\r\n  module.exports.soundManager = soundManager;\r\n\r\n} else if (typeof define === 'function' && define.amd) {\r\n\r\n  /**\r\n   * AMD - requireJS\r\n   * basic usage:\r\n   * require([\"/path/to/soundmanager2.js\"], function(SoundManager) {\r\n   *   SoundManager.getInstance().setup({\r\n   *     url: '/swf/',\r\n   *     onready: function() { ... }\r\n   *   })\r\n   * });\r\n   *\r\n   * SM2_DEFER usage:\r\n   * window.SM2_DEFER = true;\r\n   * require([\"/path/to/soundmanager2.js\"], function(SoundManager) {\r\n   *   SoundManager.getInstance(function() {\r\n   *     var soundManager = new SoundManager.constructor();\r\n   *     soundManager.setup({\r\n   *       url: '/swf/',\r\n   *       ...\r\n   *     });\r\n   *     ...\r\n   *     soundManager.beginDelayedInit();\r\n   *     return soundManager;\r\n   *   })\r\n   * });\r\n   */\r\n\r\n  define(function() {\r\n    /**\r\n     * Retrieve the global instance of SoundManager.\r\n     * If a global instance does not exist it can be created using a callback.\r\n     *\r\n     * @param {Function} smBuilder Optional: Callback used to create a new SoundManager instance\r\n     * @return {SoundManager} The global SoundManager instance\r\n     */\r\n    function getInstance(smBuilder) {\r\n      if (!window.soundManager && smBuilder instanceof Function) {\r\n        var instance = smBuilder(SoundManager);\r\n        if (instance instanceof SoundManager) {\r\n          window.soundManager = instance;\r\n        }\r\n      }\r\n      return window.soundManager;\r\n    }\r\n    return {\r\n      constructor: SoundManager,\r\n      getInstance: getInstance\r\n    };\r\n  });\r\n\r\n}\r\n\r\n// standard browser case\r\n\r\n// constructor\r\nwindow.SoundManager = SoundManager;\r\n\r\n/**\r\n * note: SM2 requires a window global due to Flash, which makes calls to window.soundManager.\r\n * Flash may not always be needed, but this is not known until async init and SM2 may even \"reboot\" into Flash mode.\r\n */\r\n\r\n// public API, flash callbacks etc.\r\nwindow.soundManager = soundManager;\r\n\r\n}(window));\r\n", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar pendingCalls = [];\nvar initialized = false;\n\nvar soundManager = void 0;\n// Allow server side rendering\nif (typeof window !== 'undefined') {\n  if (process.env.NODE_ENV !== 'production') {\n    var _require = require('soundmanager2');\n\n    soundManager = _require.soundManager;\n  } else {\n    var _require2 = require('soundmanager2/script/soundmanager2-nodebug');\n\n    soundManager = _require2.soundManager;\n  }\n\n  soundManager.onready(function () {\n    pendingCalls.slice().forEach(function (cb) {\n      return cb();\n    });\n  });\n}\n\nfunction _createSound(options, cb) {\n  if (soundManager.ok()) {\n    cb(soundManager.createSound(options));\n    return function () {};\n  } else {\n    if (!initialized) {\n      initialized = true;\n      soundManager.beginDelayedInit();\n    }\n\n    var call = function call() {\n      cb(soundManager.createSound(options));\n    };\n\n    pendingCalls.push(call);\n\n    return function () {\n      pendingCalls.splice(pendingCalls.indexOf(call), 1);\n    };\n  }\n}\n\nfunction noop() {}\n\nvar playStatuses = {\n  PLAYING: 'PLAYING',\n  STOPPED: 'STOPPED',\n  PAUSED: 'PAUSED'\n};\n\nvar Sound = function (_React$Component) {\n  _inherits(Sound, _React$Component);\n\n  function Sound() {\n    _classCallCheck(this, Sound);\n\n    return _possibleConstructorReturn(this, (Sound.__proto__ || Object.getPrototypeOf(Sound)).apply(this, arguments));\n  }\n\n  _createClass(Sound, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.createSound(function (sound) {\n        return _this2.updateSound(sound);\n      });\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.removeSound();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      var _this3 = this;\n\n      if (this.props.url !== prevProps.url) {\n        this.createSound(function (sound) {\n          return _this3.updateSound(sound, prevProps);\n        });\n      } else {\n        this.updateSound(this.sound);\n      }\n    }\n  }, {\n    key: 'updateSound',\n    value: function updateSound(sound) {\n      var prevProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!sound) {\n        return;\n      }\n\n      if (this.props.playStatus === playStatuses.PLAYING) {\n        if (sound.playState === 0) {\n          sound.play();\n        }\n\n        if (sound.paused) {\n          sound.resume();\n        }\n      } else if (this.props.playStatus === playStatuses.STOPPED) {\n        if (sound.playState !== 0) {\n          sound.stop();\n        }\n      } else {\n        // this.props.playStatus === playStatuses.PAUSED\n        if (!sound.paused) {\n          sound.pause();\n        }\n      }\n\n      if (this.props.playFromPosition != null) {\n        if (this.props.playFromPosition !== prevProps.playFromPosition) {\n          sound.setPosition(this.props.playFromPosition);\n        }\n      }\n\n      if (this.props.position != null) {\n        if (sound.position !== this.props.position && Math.round(sound.position) !== Math.round(this.props.position)) {\n\n          sound.setPosition(this.props.position);\n        }\n      }\n\n      if (this.props.volume !== prevProps.volume) {\n        sound.setVolume(this.props.volume);\n      }\n\n      if (this.props.playbackRate !== prevProps.playbackRate) {\n        sound.setPlaybackRate(this.props.playbackRate);\n      }\n    }\n  }, {\n    key: 'createSound',\n    value: function createSound(callback) {\n      var _this4 = this;\n\n      this.removeSound();\n\n      var instance = this;\n\n      if (!this.props.url) {\n        return;\n      }\n\n      this.stopCreatingSound = _createSound({\n        url: this.props.url,\n        autoLoad: this.props.autoLoad,\n        volume: this.props.volume,\n        position: this.props.playFromPosition || this.props.position || 0,\n        playbackRate: this.props.playbackRate,\n        whileloading: function whileloading() {\n          instance.props.onLoading(this);\n        },\n        whileplaying: function whileplaying() {\n          instance.props.onPlaying(this);\n        },\n        onerror: function onerror(errorCode, description) {\n          instance.props.onError(errorCode, description, this);\n        },\n        onload: function onload() {\n          instance.props.onLoad(this);\n        },\n        onpause: function onpause() {\n          instance.props.onPause(this);\n        },\n        onresume: function onresume() {\n          instance.props.onResume(this);\n        },\n        onstop: function onstop() {\n          instance.props.onStop(this);\n        },\n        onfinish: function onfinish() {\n          if (instance.props.loop && instance.props.playStatus === playStatuses.PLAYING) {\n            instance.sound.play();\n          } else {\n            instance.props.onFinishedPlaying();\n          }\n        },\n        onbufferchange: function onbufferchange() {\n          instance.props.onBufferChange(this.isBuffering);\n        }\n      }, function (sound) {\n        _this4.sound = sound;\n        callback(sound);\n      });\n    }\n  }, {\n    key: 'removeSound',\n    value: function removeSound() {\n      if (this.stopCreatingSound) {\n        this.stopCreatingSound();\n        delete this.stopCreatingSound;\n      }\n\n      if (this.sound) {\n        try {\n          this.sound.destruct();\n        } catch (e) {} // eslint-disable-line\n\n        delete this.sound;\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return Sound;\n}(_react2.default.Component);\n\nSound.status = playStatuses;\nSound.propTypes = {\n  url: _propTypes2.default.string.isRequired,\n  playStatus: _propTypes2.default.oneOf(Object.keys(playStatuses)).isRequired,\n  position: _propTypes2.default.number,\n  playFromPosition: _propTypes2.default.number,\n  volume: _propTypes2.default.number,\n  playbackRate: _propTypes2.default.number,\n  onError: _propTypes2.default.func,\n  onLoading: _propTypes2.default.func,\n  onLoad: _propTypes2.default.func,\n  onPlaying: _propTypes2.default.func,\n  onPause: _propTypes2.default.func,\n  onResume: _propTypes2.default.func,\n  onStop: _propTypes2.default.func,\n  onFinishedPlaying: _propTypes2.default.func,\n  onBufferChange: _propTypes2.default.func,\n  autoLoad: _propTypes2.default.bool,\n  loop: _propTypes2.default.bool\n};\nSound.defaultProps = {\n  volume: 100,\n  playbackRate: 1,\n  onError: noop,\n  onLoading: noop,\n  onPlaying: noop,\n  onLoad: noop,\n  onPause: noop,\n  onResume: noop,\n  onStop: noop,\n  onFinishedPlaying: noop,\n  onBufferChange: noop,\n  autoLoad: false,\n  loop: false\n};\nexports.default = Sound;"],
  "mappings": "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",
  "names": ["window", "call", "Sound"]
}
